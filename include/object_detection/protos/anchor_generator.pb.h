// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/anchor_generator.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/flexible_grid_anchor_generator.pb.h"
#include "object_detection/protos/grid_anchor_generator.pb.h"
#include "object_detection/protos/multiscale_anchor_generator.pb.h"
#include "object_detection/protos/ssd_anchor_generator.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto;
namespace object_detection {
namespace protos {
class AnchorGenerator;
struct AnchorGeneratorDefaultTypeInternal;
extern AnchorGeneratorDefaultTypeInternal _AnchorGenerator_default_instance_;
}  // namespace protos
}  // namespace object_detection
PROTOBUF_NAMESPACE_OPEN
template<> ::object_detection::protos::AnchorGenerator* Arena::CreateMaybeMessage<::object_detection::protos::AnchorGenerator>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace object_detection {
namespace protos {

// ===================================================================

class AnchorGenerator final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.AnchorGenerator) */ {
 public:
  inline AnchorGenerator() : AnchorGenerator(nullptr) {}
  ~AnchorGenerator() override;
  explicit constexpr AnchorGenerator(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AnchorGenerator(const AnchorGenerator& from);
  AnchorGenerator(AnchorGenerator&& from) noexcept
    : AnchorGenerator() {
    *this = ::std::move(from);
  }

  inline AnchorGenerator& operator=(const AnchorGenerator& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnchorGenerator& operator=(AnchorGenerator&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AnchorGenerator& default_instance() {
    return *internal_default_instance();
  }
  enum AnchorGeneratorOneofCase {
    kGridAnchorGenerator = 1,
    kSsdAnchorGenerator = 2,
    kMultiscaleAnchorGenerator = 3,
    kFlexibleGridAnchorGenerator = 4,
    ANCHOR_GENERATOR_ONEOF_NOT_SET = 0,
  };

  static inline const AnchorGenerator* internal_default_instance() {
    return reinterpret_cast<const AnchorGenerator*>(
               &_AnchorGenerator_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AnchorGenerator& a, AnchorGenerator& b) {
    a.Swap(&b);
  }
  inline void Swap(AnchorGenerator* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnchorGenerator* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AnchorGenerator* New() const final {
    return new AnchorGenerator();
  }

  AnchorGenerator* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AnchorGenerator>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AnchorGenerator& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AnchorGenerator& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnchorGenerator* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.AnchorGenerator";
  }
  protected:
  explicit AnchorGenerator(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGridAnchorGeneratorFieldNumber = 1,
    kSsdAnchorGeneratorFieldNumber = 2,
    kMultiscaleAnchorGeneratorFieldNumber = 3,
    kFlexibleGridAnchorGeneratorFieldNumber = 4,
  };
  // .object_detection.protos.GridAnchorGenerator grid_anchor_generator = 1;
  bool has_grid_anchor_generator() const;
  private:
  bool _internal_has_grid_anchor_generator() const;
  public:
  void clear_grid_anchor_generator();
  const ::object_detection::protos::GridAnchorGenerator& grid_anchor_generator() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::GridAnchorGenerator* release_grid_anchor_generator();
  ::object_detection::protos::GridAnchorGenerator* mutable_grid_anchor_generator();
  void set_allocated_grid_anchor_generator(::object_detection::protos::GridAnchorGenerator* grid_anchor_generator);
  private:
  const ::object_detection::protos::GridAnchorGenerator& _internal_grid_anchor_generator() const;
  ::object_detection::protos::GridAnchorGenerator* _internal_mutable_grid_anchor_generator();
  public:
  void unsafe_arena_set_allocated_grid_anchor_generator(
      ::object_detection::protos::GridAnchorGenerator* grid_anchor_generator);
  ::object_detection::protos::GridAnchorGenerator* unsafe_arena_release_grid_anchor_generator();

  // .object_detection.protos.SsdAnchorGenerator ssd_anchor_generator = 2;
  bool has_ssd_anchor_generator() const;
  private:
  bool _internal_has_ssd_anchor_generator() const;
  public:
  void clear_ssd_anchor_generator();
  const ::object_detection::protos::SsdAnchorGenerator& ssd_anchor_generator() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::SsdAnchorGenerator* release_ssd_anchor_generator();
  ::object_detection::protos::SsdAnchorGenerator* mutable_ssd_anchor_generator();
  void set_allocated_ssd_anchor_generator(::object_detection::protos::SsdAnchorGenerator* ssd_anchor_generator);
  private:
  const ::object_detection::protos::SsdAnchorGenerator& _internal_ssd_anchor_generator() const;
  ::object_detection::protos::SsdAnchorGenerator* _internal_mutable_ssd_anchor_generator();
  public:
  void unsafe_arena_set_allocated_ssd_anchor_generator(
      ::object_detection::protos::SsdAnchorGenerator* ssd_anchor_generator);
  ::object_detection::protos::SsdAnchorGenerator* unsafe_arena_release_ssd_anchor_generator();

  // .object_detection.protos.MultiscaleAnchorGenerator multiscale_anchor_generator = 3;
  bool has_multiscale_anchor_generator() const;
  private:
  bool _internal_has_multiscale_anchor_generator() const;
  public:
  void clear_multiscale_anchor_generator();
  const ::object_detection::protos::MultiscaleAnchorGenerator& multiscale_anchor_generator() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::MultiscaleAnchorGenerator* release_multiscale_anchor_generator();
  ::object_detection::protos::MultiscaleAnchorGenerator* mutable_multiscale_anchor_generator();
  void set_allocated_multiscale_anchor_generator(::object_detection::protos::MultiscaleAnchorGenerator* multiscale_anchor_generator);
  private:
  const ::object_detection::protos::MultiscaleAnchorGenerator& _internal_multiscale_anchor_generator() const;
  ::object_detection::protos::MultiscaleAnchorGenerator* _internal_mutable_multiscale_anchor_generator();
  public:
  void unsafe_arena_set_allocated_multiscale_anchor_generator(
      ::object_detection::protos::MultiscaleAnchorGenerator* multiscale_anchor_generator);
  ::object_detection::protos::MultiscaleAnchorGenerator* unsafe_arena_release_multiscale_anchor_generator();

  // .object_detection.protos.FlexibleGridAnchorGenerator flexible_grid_anchor_generator = 4;
  bool has_flexible_grid_anchor_generator() const;
  private:
  bool _internal_has_flexible_grid_anchor_generator() const;
  public:
  void clear_flexible_grid_anchor_generator();
  const ::object_detection::protos::FlexibleGridAnchorGenerator& flexible_grid_anchor_generator() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::FlexibleGridAnchorGenerator* release_flexible_grid_anchor_generator();
  ::object_detection::protos::FlexibleGridAnchorGenerator* mutable_flexible_grid_anchor_generator();
  void set_allocated_flexible_grid_anchor_generator(::object_detection::protos::FlexibleGridAnchorGenerator* flexible_grid_anchor_generator);
  private:
  const ::object_detection::protos::FlexibleGridAnchorGenerator& _internal_flexible_grid_anchor_generator() const;
  ::object_detection::protos::FlexibleGridAnchorGenerator* _internal_mutable_flexible_grid_anchor_generator();
  public:
  void unsafe_arena_set_allocated_flexible_grid_anchor_generator(
      ::object_detection::protos::FlexibleGridAnchorGenerator* flexible_grid_anchor_generator);
  ::object_detection::protos::FlexibleGridAnchorGenerator* unsafe_arena_release_flexible_grid_anchor_generator();

  void clear_anchor_generator_oneof();
  AnchorGeneratorOneofCase anchor_generator_oneof_case() const;
  // @@protoc_insertion_point(class_scope:object_detection.protos.AnchorGenerator)
 private:
  class _Internal;
  void set_has_grid_anchor_generator();
  void set_has_ssd_anchor_generator();
  void set_has_multiscale_anchor_generator();
  void set_has_flexible_grid_anchor_generator();

  inline bool has_anchor_generator_oneof() const;
  inline void clear_has_anchor_generator_oneof();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union AnchorGeneratorOneofUnion {
    constexpr AnchorGeneratorOneofUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::object_detection::protos::GridAnchorGenerator* grid_anchor_generator_;
    ::object_detection::protos::SsdAnchorGenerator* ssd_anchor_generator_;
    ::object_detection::protos::MultiscaleAnchorGenerator* multiscale_anchor_generator_;
    ::object_detection::protos::FlexibleGridAnchorGenerator* flexible_grid_anchor_generator_;
  } anchor_generator_oneof_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AnchorGenerator

// .object_detection.protos.GridAnchorGenerator grid_anchor_generator = 1;
inline bool AnchorGenerator::_internal_has_grid_anchor_generator() const {
  return anchor_generator_oneof_case() == kGridAnchorGenerator;
}
inline bool AnchorGenerator::has_grid_anchor_generator() const {
  return _internal_has_grid_anchor_generator();
}
inline void AnchorGenerator::set_has_grid_anchor_generator() {
  _oneof_case_[0] = kGridAnchorGenerator;
}
inline ::object_detection::protos::GridAnchorGenerator* AnchorGenerator::release_grid_anchor_generator() {
  // @@protoc_insertion_point(field_release:object_detection.protos.AnchorGenerator.grid_anchor_generator)
  if (_internal_has_grid_anchor_generator()) {
    clear_has_anchor_generator_oneof();
      ::object_detection::protos::GridAnchorGenerator* temp = anchor_generator_oneof_.grid_anchor_generator_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    anchor_generator_oneof_.grid_anchor_generator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::object_detection::protos::GridAnchorGenerator& AnchorGenerator::_internal_grid_anchor_generator() const {
  return _internal_has_grid_anchor_generator()
      ? *anchor_generator_oneof_.grid_anchor_generator_
      : reinterpret_cast< ::object_detection::protos::GridAnchorGenerator&>(::object_detection::protos::_GridAnchorGenerator_default_instance_);
}
inline const ::object_detection::protos::GridAnchorGenerator& AnchorGenerator::grid_anchor_generator() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGenerator.grid_anchor_generator)
  return _internal_grid_anchor_generator();
}
inline ::object_detection::protos::GridAnchorGenerator* AnchorGenerator::unsafe_arena_release_grid_anchor_generator() {
  // @@protoc_insertion_point(field_unsafe_arena_release:object_detection.protos.AnchorGenerator.grid_anchor_generator)
  if (_internal_has_grid_anchor_generator()) {
    clear_has_anchor_generator_oneof();
    ::object_detection::protos::GridAnchorGenerator* temp = anchor_generator_oneof_.grid_anchor_generator_;
    anchor_generator_oneof_.grid_anchor_generator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void AnchorGenerator::unsafe_arena_set_allocated_grid_anchor_generator(::object_detection::protos::GridAnchorGenerator* grid_anchor_generator) {
  clear_anchor_generator_oneof();
  if (grid_anchor_generator) {
    set_has_grid_anchor_generator();
    anchor_generator_oneof_.grid_anchor_generator_ = grid_anchor_generator;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.AnchorGenerator.grid_anchor_generator)
}
inline ::object_detection::protos::GridAnchorGenerator* AnchorGenerator::_internal_mutable_grid_anchor_generator() {
  if (!_internal_has_grid_anchor_generator()) {
    clear_anchor_generator_oneof();
    set_has_grid_anchor_generator();
    anchor_generator_oneof_.grid_anchor_generator_ = CreateMaybeMessage< ::object_detection::protos::GridAnchorGenerator >(GetArenaForAllocation());
  }
  return anchor_generator_oneof_.grid_anchor_generator_;
}
inline ::object_detection::protos::GridAnchorGenerator* AnchorGenerator::mutable_grid_anchor_generator() {
  ::object_detection::protos::GridAnchorGenerator* _msg = _internal_mutable_grid_anchor_generator();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.AnchorGenerator.grid_anchor_generator)
  return _msg;
}

// .object_detection.protos.SsdAnchorGenerator ssd_anchor_generator = 2;
inline bool AnchorGenerator::_internal_has_ssd_anchor_generator() const {
  return anchor_generator_oneof_case() == kSsdAnchorGenerator;
}
inline bool AnchorGenerator::has_ssd_anchor_generator() const {
  return _internal_has_ssd_anchor_generator();
}
inline void AnchorGenerator::set_has_ssd_anchor_generator() {
  _oneof_case_[0] = kSsdAnchorGenerator;
}
inline ::object_detection::protos::SsdAnchorGenerator* AnchorGenerator::release_ssd_anchor_generator() {
  // @@protoc_insertion_point(field_release:object_detection.protos.AnchorGenerator.ssd_anchor_generator)
  if (_internal_has_ssd_anchor_generator()) {
    clear_has_anchor_generator_oneof();
      ::object_detection::protos::SsdAnchorGenerator* temp = anchor_generator_oneof_.ssd_anchor_generator_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    anchor_generator_oneof_.ssd_anchor_generator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::object_detection::protos::SsdAnchorGenerator& AnchorGenerator::_internal_ssd_anchor_generator() const {
  return _internal_has_ssd_anchor_generator()
      ? *anchor_generator_oneof_.ssd_anchor_generator_
      : reinterpret_cast< ::object_detection::protos::SsdAnchorGenerator&>(::object_detection::protos::_SsdAnchorGenerator_default_instance_);
}
inline const ::object_detection::protos::SsdAnchorGenerator& AnchorGenerator::ssd_anchor_generator() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGenerator.ssd_anchor_generator)
  return _internal_ssd_anchor_generator();
}
inline ::object_detection::protos::SsdAnchorGenerator* AnchorGenerator::unsafe_arena_release_ssd_anchor_generator() {
  // @@protoc_insertion_point(field_unsafe_arena_release:object_detection.protos.AnchorGenerator.ssd_anchor_generator)
  if (_internal_has_ssd_anchor_generator()) {
    clear_has_anchor_generator_oneof();
    ::object_detection::protos::SsdAnchorGenerator* temp = anchor_generator_oneof_.ssd_anchor_generator_;
    anchor_generator_oneof_.ssd_anchor_generator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void AnchorGenerator::unsafe_arena_set_allocated_ssd_anchor_generator(::object_detection::protos::SsdAnchorGenerator* ssd_anchor_generator) {
  clear_anchor_generator_oneof();
  if (ssd_anchor_generator) {
    set_has_ssd_anchor_generator();
    anchor_generator_oneof_.ssd_anchor_generator_ = ssd_anchor_generator;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.AnchorGenerator.ssd_anchor_generator)
}
inline ::object_detection::protos::SsdAnchorGenerator* AnchorGenerator::_internal_mutable_ssd_anchor_generator() {
  if (!_internal_has_ssd_anchor_generator()) {
    clear_anchor_generator_oneof();
    set_has_ssd_anchor_generator();
    anchor_generator_oneof_.ssd_anchor_generator_ = CreateMaybeMessage< ::object_detection::protos::SsdAnchorGenerator >(GetArenaForAllocation());
  }
  return anchor_generator_oneof_.ssd_anchor_generator_;
}
inline ::object_detection::protos::SsdAnchorGenerator* AnchorGenerator::mutable_ssd_anchor_generator() {
  ::object_detection::protos::SsdAnchorGenerator* _msg = _internal_mutable_ssd_anchor_generator();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.AnchorGenerator.ssd_anchor_generator)
  return _msg;
}

// .object_detection.protos.MultiscaleAnchorGenerator multiscale_anchor_generator = 3;
inline bool AnchorGenerator::_internal_has_multiscale_anchor_generator() const {
  return anchor_generator_oneof_case() == kMultiscaleAnchorGenerator;
}
inline bool AnchorGenerator::has_multiscale_anchor_generator() const {
  return _internal_has_multiscale_anchor_generator();
}
inline void AnchorGenerator::set_has_multiscale_anchor_generator() {
  _oneof_case_[0] = kMultiscaleAnchorGenerator;
}
inline ::object_detection::protos::MultiscaleAnchorGenerator* AnchorGenerator::release_multiscale_anchor_generator() {
  // @@protoc_insertion_point(field_release:object_detection.protos.AnchorGenerator.multiscale_anchor_generator)
  if (_internal_has_multiscale_anchor_generator()) {
    clear_has_anchor_generator_oneof();
      ::object_detection::protos::MultiscaleAnchorGenerator* temp = anchor_generator_oneof_.multiscale_anchor_generator_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    anchor_generator_oneof_.multiscale_anchor_generator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::object_detection::protos::MultiscaleAnchorGenerator& AnchorGenerator::_internal_multiscale_anchor_generator() const {
  return _internal_has_multiscale_anchor_generator()
      ? *anchor_generator_oneof_.multiscale_anchor_generator_
      : reinterpret_cast< ::object_detection::protos::MultiscaleAnchorGenerator&>(::object_detection::protos::_MultiscaleAnchorGenerator_default_instance_);
}
inline const ::object_detection::protos::MultiscaleAnchorGenerator& AnchorGenerator::multiscale_anchor_generator() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGenerator.multiscale_anchor_generator)
  return _internal_multiscale_anchor_generator();
}
inline ::object_detection::protos::MultiscaleAnchorGenerator* AnchorGenerator::unsafe_arena_release_multiscale_anchor_generator() {
  // @@protoc_insertion_point(field_unsafe_arena_release:object_detection.protos.AnchorGenerator.multiscale_anchor_generator)
  if (_internal_has_multiscale_anchor_generator()) {
    clear_has_anchor_generator_oneof();
    ::object_detection::protos::MultiscaleAnchorGenerator* temp = anchor_generator_oneof_.multiscale_anchor_generator_;
    anchor_generator_oneof_.multiscale_anchor_generator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void AnchorGenerator::unsafe_arena_set_allocated_multiscale_anchor_generator(::object_detection::protos::MultiscaleAnchorGenerator* multiscale_anchor_generator) {
  clear_anchor_generator_oneof();
  if (multiscale_anchor_generator) {
    set_has_multiscale_anchor_generator();
    anchor_generator_oneof_.multiscale_anchor_generator_ = multiscale_anchor_generator;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.AnchorGenerator.multiscale_anchor_generator)
}
inline ::object_detection::protos::MultiscaleAnchorGenerator* AnchorGenerator::_internal_mutable_multiscale_anchor_generator() {
  if (!_internal_has_multiscale_anchor_generator()) {
    clear_anchor_generator_oneof();
    set_has_multiscale_anchor_generator();
    anchor_generator_oneof_.multiscale_anchor_generator_ = CreateMaybeMessage< ::object_detection::protos::MultiscaleAnchorGenerator >(GetArenaForAllocation());
  }
  return anchor_generator_oneof_.multiscale_anchor_generator_;
}
inline ::object_detection::protos::MultiscaleAnchorGenerator* AnchorGenerator::mutable_multiscale_anchor_generator() {
  ::object_detection::protos::MultiscaleAnchorGenerator* _msg = _internal_mutable_multiscale_anchor_generator();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.AnchorGenerator.multiscale_anchor_generator)
  return _msg;
}

// .object_detection.protos.FlexibleGridAnchorGenerator flexible_grid_anchor_generator = 4;
inline bool AnchorGenerator::_internal_has_flexible_grid_anchor_generator() const {
  return anchor_generator_oneof_case() == kFlexibleGridAnchorGenerator;
}
inline bool AnchorGenerator::has_flexible_grid_anchor_generator() const {
  return _internal_has_flexible_grid_anchor_generator();
}
inline void AnchorGenerator::set_has_flexible_grid_anchor_generator() {
  _oneof_case_[0] = kFlexibleGridAnchorGenerator;
}
inline ::object_detection::protos::FlexibleGridAnchorGenerator* AnchorGenerator::release_flexible_grid_anchor_generator() {
  // @@protoc_insertion_point(field_release:object_detection.protos.AnchorGenerator.flexible_grid_anchor_generator)
  if (_internal_has_flexible_grid_anchor_generator()) {
    clear_has_anchor_generator_oneof();
      ::object_detection::protos::FlexibleGridAnchorGenerator* temp = anchor_generator_oneof_.flexible_grid_anchor_generator_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    anchor_generator_oneof_.flexible_grid_anchor_generator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::object_detection::protos::FlexibleGridAnchorGenerator& AnchorGenerator::_internal_flexible_grid_anchor_generator() const {
  return _internal_has_flexible_grid_anchor_generator()
      ? *anchor_generator_oneof_.flexible_grid_anchor_generator_
      : reinterpret_cast< ::object_detection::protos::FlexibleGridAnchorGenerator&>(::object_detection::protos::_FlexibleGridAnchorGenerator_default_instance_);
}
inline const ::object_detection::protos::FlexibleGridAnchorGenerator& AnchorGenerator::flexible_grid_anchor_generator() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGenerator.flexible_grid_anchor_generator)
  return _internal_flexible_grid_anchor_generator();
}
inline ::object_detection::protos::FlexibleGridAnchorGenerator* AnchorGenerator::unsafe_arena_release_flexible_grid_anchor_generator() {
  // @@protoc_insertion_point(field_unsafe_arena_release:object_detection.protos.AnchorGenerator.flexible_grid_anchor_generator)
  if (_internal_has_flexible_grid_anchor_generator()) {
    clear_has_anchor_generator_oneof();
    ::object_detection::protos::FlexibleGridAnchorGenerator* temp = anchor_generator_oneof_.flexible_grid_anchor_generator_;
    anchor_generator_oneof_.flexible_grid_anchor_generator_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void AnchorGenerator::unsafe_arena_set_allocated_flexible_grid_anchor_generator(::object_detection::protos::FlexibleGridAnchorGenerator* flexible_grid_anchor_generator) {
  clear_anchor_generator_oneof();
  if (flexible_grid_anchor_generator) {
    set_has_flexible_grid_anchor_generator();
    anchor_generator_oneof_.flexible_grid_anchor_generator_ = flexible_grid_anchor_generator;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.AnchorGenerator.flexible_grid_anchor_generator)
}
inline ::object_detection::protos::FlexibleGridAnchorGenerator* AnchorGenerator::_internal_mutable_flexible_grid_anchor_generator() {
  if (!_internal_has_flexible_grid_anchor_generator()) {
    clear_anchor_generator_oneof();
    set_has_flexible_grid_anchor_generator();
    anchor_generator_oneof_.flexible_grid_anchor_generator_ = CreateMaybeMessage< ::object_detection::protos::FlexibleGridAnchorGenerator >(GetArenaForAllocation());
  }
  return anchor_generator_oneof_.flexible_grid_anchor_generator_;
}
inline ::object_detection::protos::FlexibleGridAnchorGenerator* AnchorGenerator::mutable_flexible_grid_anchor_generator() {
  ::object_detection::protos::FlexibleGridAnchorGenerator* _msg = _internal_mutable_flexible_grid_anchor_generator();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.AnchorGenerator.flexible_grid_anchor_generator)
  return _msg;
}

inline bool AnchorGenerator::has_anchor_generator_oneof() const {
  return anchor_generator_oneof_case() != ANCHOR_GENERATOR_ONEOF_NOT_SET;
}
inline void AnchorGenerator::clear_has_anchor_generator_oneof() {
  _oneof_case_[0] = ANCHOR_GENERATOR_ONEOF_NOT_SET;
}
inline AnchorGenerator::AnchorGeneratorOneofCase AnchorGenerator::anchor_generator_oneof_case() const {
  return AnchorGenerator::AnchorGeneratorOneofCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fanchor_5fgenerator_2eproto
