// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/faster_rcnn.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2ffaster_5frcnn_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2ffaster_5frcnn_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/anchor_generator.pb.h"
#include "object_detection/protos/box_predictor.pb.h"
#include "object_detection/protos/hyperparams.pb.h"
#include "object_detection/protos/image_resizer.pb.h"
#include "object_detection/protos/losses.pb.h"
#include "object_detection/protos/post_processing.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_object_5fdetection_2fprotos_2ffaster_5frcnn_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_object_5fdetection_2fprotos_2ffaster_5frcnn_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_5fdetection_2fprotos_2ffaster_5frcnn_2eproto;
namespace object_detection {
namespace protos {
class FasterRcnn;
struct FasterRcnnDefaultTypeInternal;
extern FasterRcnnDefaultTypeInternal _FasterRcnn_default_instance_;
class FasterRcnnFeatureExtractor;
struct FasterRcnnFeatureExtractorDefaultTypeInternal;
extern FasterRcnnFeatureExtractorDefaultTypeInternal _FasterRcnnFeatureExtractor_default_instance_;
}  // namespace protos
}  // namespace object_detection
PROTOBUF_NAMESPACE_OPEN
template<> ::object_detection::protos::FasterRcnn* Arena::CreateMaybeMessage<::object_detection::protos::FasterRcnn>(Arena*);
template<> ::object_detection::protos::FasterRcnnFeatureExtractor* Arena::CreateMaybeMessage<::object_detection::protos::FasterRcnnFeatureExtractor>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace object_detection {
namespace protos {

// ===================================================================

class FasterRcnn final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.FasterRcnn) */ {
 public:
  inline FasterRcnn() : FasterRcnn(nullptr) {}
  ~FasterRcnn() override;
  explicit constexpr FasterRcnn(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FasterRcnn(const FasterRcnn& from);
  FasterRcnn(FasterRcnn&& from) noexcept
    : FasterRcnn() {
    *this = ::std::move(from);
  }

  inline FasterRcnn& operator=(const FasterRcnn& from) {
    CopyFrom(from);
    return *this;
  }
  inline FasterRcnn& operator=(FasterRcnn&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FasterRcnn& default_instance() {
    return *internal_default_instance();
  }
  static inline const FasterRcnn* internal_default_instance() {
    return reinterpret_cast<const FasterRcnn*>(
               &_FasterRcnn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FasterRcnn& a, FasterRcnn& b) {
    a.Swap(&b);
  }
  inline void Swap(FasterRcnn* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FasterRcnn* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FasterRcnn* New() const final {
    return new FasterRcnn();
  }

  FasterRcnn* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FasterRcnn>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FasterRcnn& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FasterRcnn& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FasterRcnn* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.FasterRcnn";
  }
  protected:
  explicit FasterRcnn(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImageResizerFieldNumber = 4,
    kFeatureExtractorFieldNumber = 5,
    kFirstStageAnchorGeneratorFieldNumber = 6,
    kFirstStageBoxPredictorConvHyperparamsFieldNumber = 8,
    kSecondStageBoxPredictorFieldNumber = 21,
    kSecondStagePostProcessingFieldNumber = 24,
    kHardExampleMinerFieldNumber = 28,
    kSecondStageClassificationLossFieldNumber = 29,
    kNumClassesFieldNumber = 3,
    kFirstStageNmsScoreThresholdFieldNumber = 13,
    kInitialCropSizeFieldNumber = 18,
    kMaxpoolKernelSizeFieldNumber = 19,
    kMaxpoolStrideFieldNumber = 20,
    kInplaceBatchnormUpdateFieldNumber = 30,
    kUseMatmulCropAndResizeFieldNumber = 31,
    kClipAnchorsToImageFieldNumber = 32,
    kUseMatmulGatherInMatcherFieldNumber = 33,
    kUseStaticBalancedLabelSamplerFieldNumber = 34,
    kUseStaticShapesFieldNumber = 35,
    kUseStaticShapesForEvalFieldNumber = 37,
    kNumberOfStagesFieldNumber = 1,
    kFirstStageAtrousRateFieldNumber = 7,
    kFirstStageBoxPredictorKernelSizeFieldNumber = 9,
    kFirstStageBoxPredictorDepthFieldNumber = 10,
    kFirstStageMinibatchSizeFieldNumber = 11,
    kFirstStagePositiveBalanceFractionFieldNumber = 12,
    kFirstStageNmsIouThresholdFieldNumber = 14,
    kFirstStageMaxProposalsFieldNumber = 15,
    kFirstStageLocalizationLossWeightFieldNumber = 16,
    kFirstStageObjectnessLossWeightFieldNumber = 17,
    kSecondStageBatchSizeFieldNumber = 22,
    kSecondStageBalanceFractionFieldNumber = 23,
    kSecondStageLocalizationLossWeightFieldNumber = 25,
    kSecondStageClassificationLossWeightFieldNumber = 26,
    kSecondStageMaskPredictionLossWeightFieldNumber = 27,
    kResizeMasksFieldNumber = 36,
  };
  // optional .object_detection.protos.ImageResizer image_resizer = 4;
  bool has_image_resizer() const;
  private:
  bool _internal_has_image_resizer() const;
  public:
  void clear_image_resizer();
  const ::object_detection::protos::ImageResizer& image_resizer() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::ImageResizer* release_image_resizer();
  ::object_detection::protos::ImageResizer* mutable_image_resizer();
  void set_allocated_image_resizer(::object_detection::protos::ImageResizer* image_resizer);
  private:
  const ::object_detection::protos::ImageResizer& _internal_image_resizer() const;
  ::object_detection::protos::ImageResizer* _internal_mutable_image_resizer();
  public:
  void unsafe_arena_set_allocated_image_resizer(
      ::object_detection::protos::ImageResizer* image_resizer);
  ::object_detection::protos::ImageResizer* unsafe_arena_release_image_resizer();

  // optional .object_detection.protos.FasterRcnnFeatureExtractor feature_extractor = 5;
  bool has_feature_extractor() const;
  private:
  bool _internal_has_feature_extractor() const;
  public:
  void clear_feature_extractor();
  const ::object_detection::protos::FasterRcnnFeatureExtractor& feature_extractor() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::FasterRcnnFeatureExtractor* release_feature_extractor();
  ::object_detection::protos::FasterRcnnFeatureExtractor* mutable_feature_extractor();
  void set_allocated_feature_extractor(::object_detection::protos::FasterRcnnFeatureExtractor* feature_extractor);
  private:
  const ::object_detection::protos::FasterRcnnFeatureExtractor& _internal_feature_extractor() const;
  ::object_detection::protos::FasterRcnnFeatureExtractor* _internal_mutable_feature_extractor();
  public:
  void unsafe_arena_set_allocated_feature_extractor(
      ::object_detection::protos::FasterRcnnFeatureExtractor* feature_extractor);
  ::object_detection::protos::FasterRcnnFeatureExtractor* unsafe_arena_release_feature_extractor();

  // optional .object_detection.protos.AnchorGenerator first_stage_anchor_generator = 6;
  bool has_first_stage_anchor_generator() const;
  private:
  bool _internal_has_first_stage_anchor_generator() const;
  public:
  void clear_first_stage_anchor_generator();
  const ::object_detection::protos::AnchorGenerator& first_stage_anchor_generator() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::AnchorGenerator* release_first_stage_anchor_generator();
  ::object_detection::protos::AnchorGenerator* mutable_first_stage_anchor_generator();
  void set_allocated_first_stage_anchor_generator(::object_detection::protos::AnchorGenerator* first_stage_anchor_generator);
  private:
  const ::object_detection::protos::AnchorGenerator& _internal_first_stage_anchor_generator() const;
  ::object_detection::protos::AnchorGenerator* _internal_mutable_first_stage_anchor_generator();
  public:
  void unsafe_arena_set_allocated_first_stage_anchor_generator(
      ::object_detection::protos::AnchorGenerator* first_stage_anchor_generator);
  ::object_detection::protos::AnchorGenerator* unsafe_arena_release_first_stage_anchor_generator();

  // optional .object_detection.protos.Hyperparams first_stage_box_predictor_conv_hyperparams = 8;
  bool has_first_stage_box_predictor_conv_hyperparams() const;
  private:
  bool _internal_has_first_stage_box_predictor_conv_hyperparams() const;
  public:
  void clear_first_stage_box_predictor_conv_hyperparams();
  const ::object_detection::protos::Hyperparams& first_stage_box_predictor_conv_hyperparams() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::Hyperparams* release_first_stage_box_predictor_conv_hyperparams();
  ::object_detection::protos::Hyperparams* mutable_first_stage_box_predictor_conv_hyperparams();
  void set_allocated_first_stage_box_predictor_conv_hyperparams(::object_detection::protos::Hyperparams* first_stage_box_predictor_conv_hyperparams);
  private:
  const ::object_detection::protos::Hyperparams& _internal_first_stage_box_predictor_conv_hyperparams() const;
  ::object_detection::protos::Hyperparams* _internal_mutable_first_stage_box_predictor_conv_hyperparams();
  public:
  void unsafe_arena_set_allocated_first_stage_box_predictor_conv_hyperparams(
      ::object_detection::protos::Hyperparams* first_stage_box_predictor_conv_hyperparams);
  ::object_detection::protos::Hyperparams* unsafe_arena_release_first_stage_box_predictor_conv_hyperparams();

  // optional .object_detection.protos.BoxPredictor second_stage_box_predictor = 21;
  bool has_second_stage_box_predictor() const;
  private:
  bool _internal_has_second_stage_box_predictor() const;
  public:
  void clear_second_stage_box_predictor();
  const ::object_detection::protos::BoxPredictor& second_stage_box_predictor() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::BoxPredictor* release_second_stage_box_predictor();
  ::object_detection::protos::BoxPredictor* mutable_second_stage_box_predictor();
  void set_allocated_second_stage_box_predictor(::object_detection::protos::BoxPredictor* second_stage_box_predictor);
  private:
  const ::object_detection::protos::BoxPredictor& _internal_second_stage_box_predictor() const;
  ::object_detection::protos::BoxPredictor* _internal_mutable_second_stage_box_predictor();
  public:
  void unsafe_arena_set_allocated_second_stage_box_predictor(
      ::object_detection::protos::BoxPredictor* second_stage_box_predictor);
  ::object_detection::protos::BoxPredictor* unsafe_arena_release_second_stage_box_predictor();

  // optional .object_detection.protos.PostProcessing second_stage_post_processing = 24;
  bool has_second_stage_post_processing() const;
  private:
  bool _internal_has_second_stage_post_processing() const;
  public:
  void clear_second_stage_post_processing();
  const ::object_detection::protos::PostProcessing& second_stage_post_processing() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::PostProcessing* release_second_stage_post_processing();
  ::object_detection::protos::PostProcessing* mutable_second_stage_post_processing();
  void set_allocated_second_stage_post_processing(::object_detection::protos::PostProcessing* second_stage_post_processing);
  private:
  const ::object_detection::protos::PostProcessing& _internal_second_stage_post_processing() const;
  ::object_detection::protos::PostProcessing* _internal_mutable_second_stage_post_processing();
  public:
  void unsafe_arena_set_allocated_second_stage_post_processing(
      ::object_detection::protos::PostProcessing* second_stage_post_processing);
  ::object_detection::protos::PostProcessing* unsafe_arena_release_second_stage_post_processing();

  // optional .object_detection.protos.HardExampleMiner hard_example_miner = 28;
  bool has_hard_example_miner() const;
  private:
  bool _internal_has_hard_example_miner() const;
  public:
  void clear_hard_example_miner();
  const ::object_detection::protos::HardExampleMiner& hard_example_miner() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::HardExampleMiner* release_hard_example_miner();
  ::object_detection::protos::HardExampleMiner* mutable_hard_example_miner();
  void set_allocated_hard_example_miner(::object_detection::protos::HardExampleMiner* hard_example_miner);
  private:
  const ::object_detection::protos::HardExampleMiner& _internal_hard_example_miner() const;
  ::object_detection::protos::HardExampleMiner* _internal_mutable_hard_example_miner();
  public:
  void unsafe_arena_set_allocated_hard_example_miner(
      ::object_detection::protos::HardExampleMiner* hard_example_miner);
  ::object_detection::protos::HardExampleMiner* unsafe_arena_release_hard_example_miner();

  // optional .object_detection.protos.ClassificationLoss second_stage_classification_loss = 29;
  bool has_second_stage_classification_loss() const;
  private:
  bool _internal_has_second_stage_classification_loss() const;
  public:
  void clear_second_stage_classification_loss();
  const ::object_detection::protos::ClassificationLoss& second_stage_classification_loss() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::ClassificationLoss* release_second_stage_classification_loss();
  ::object_detection::protos::ClassificationLoss* mutable_second_stage_classification_loss();
  void set_allocated_second_stage_classification_loss(::object_detection::protos::ClassificationLoss* second_stage_classification_loss);
  private:
  const ::object_detection::protos::ClassificationLoss& _internal_second_stage_classification_loss() const;
  ::object_detection::protos::ClassificationLoss* _internal_mutable_second_stage_classification_loss();
  public:
  void unsafe_arena_set_allocated_second_stage_classification_loss(
      ::object_detection::protos::ClassificationLoss* second_stage_classification_loss);
  ::object_detection::protos::ClassificationLoss* unsafe_arena_release_second_stage_classification_loss();

  // optional int32 num_classes = 3;
  bool has_num_classes() const;
  private:
  bool _internal_has_num_classes() const;
  public:
  void clear_num_classes();
  ::PROTOBUF_NAMESPACE_ID::int32 num_classes() const;
  void set_num_classes(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_classes() const;
  void _internal_set_num_classes(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float first_stage_nms_score_threshold = 13 [default = 0];
  bool has_first_stage_nms_score_threshold() const;
  private:
  bool _internal_has_first_stage_nms_score_threshold() const;
  public:
  void clear_first_stage_nms_score_threshold();
  float first_stage_nms_score_threshold() const;
  void set_first_stage_nms_score_threshold(float value);
  private:
  float _internal_first_stage_nms_score_threshold() const;
  void _internal_set_first_stage_nms_score_threshold(float value);
  public:

  // optional int32 initial_crop_size = 18;
  bool has_initial_crop_size() const;
  private:
  bool _internal_has_initial_crop_size() const;
  public:
  void clear_initial_crop_size();
  ::PROTOBUF_NAMESPACE_ID::int32 initial_crop_size() const;
  void set_initial_crop_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_initial_crop_size() const;
  void _internal_set_initial_crop_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 maxpool_kernel_size = 19;
  bool has_maxpool_kernel_size() const;
  private:
  bool _internal_has_maxpool_kernel_size() const;
  public:
  void clear_maxpool_kernel_size();
  ::PROTOBUF_NAMESPACE_ID::int32 maxpool_kernel_size() const;
  void set_maxpool_kernel_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_maxpool_kernel_size() const;
  void _internal_set_maxpool_kernel_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 maxpool_stride = 20;
  bool has_maxpool_stride() const;
  private:
  bool _internal_has_maxpool_stride() const;
  public:
  void clear_maxpool_stride();
  ::PROTOBUF_NAMESPACE_ID::int32 maxpool_stride() const;
  void set_maxpool_stride(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_maxpool_stride() const;
  void _internal_set_maxpool_stride(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool inplace_batchnorm_update = 30 [default = false];
  bool has_inplace_batchnorm_update() const;
  private:
  bool _internal_has_inplace_batchnorm_update() const;
  public:
  void clear_inplace_batchnorm_update();
  bool inplace_batchnorm_update() const;
  void set_inplace_batchnorm_update(bool value);
  private:
  bool _internal_inplace_batchnorm_update() const;
  void _internal_set_inplace_batchnorm_update(bool value);
  public:

  // optional bool use_matmul_crop_and_resize = 31 [default = false];
  bool has_use_matmul_crop_and_resize() const;
  private:
  bool _internal_has_use_matmul_crop_and_resize() const;
  public:
  void clear_use_matmul_crop_and_resize();
  bool use_matmul_crop_and_resize() const;
  void set_use_matmul_crop_and_resize(bool value);
  private:
  bool _internal_use_matmul_crop_and_resize() const;
  void _internal_set_use_matmul_crop_and_resize(bool value);
  public:

  // optional bool clip_anchors_to_image = 32 [default = false];
  bool has_clip_anchors_to_image() const;
  private:
  bool _internal_has_clip_anchors_to_image() const;
  public:
  void clear_clip_anchors_to_image();
  bool clip_anchors_to_image() const;
  void set_clip_anchors_to_image(bool value);
  private:
  bool _internal_clip_anchors_to_image() const;
  void _internal_set_clip_anchors_to_image(bool value);
  public:

  // optional bool use_matmul_gather_in_matcher = 33 [default = false];
  bool has_use_matmul_gather_in_matcher() const;
  private:
  bool _internal_has_use_matmul_gather_in_matcher() const;
  public:
  void clear_use_matmul_gather_in_matcher();
  bool use_matmul_gather_in_matcher() const;
  void set_use_matmul_gather_in_matcher(bool value);
  private:
  bool _internal_use_matmul_gather_in_matcher() const;
  void _internal_set_use_matmul_gather_in_matcher(bool value);
  public:

  // optional bool use_static_balanced_label_sampler = 34 [default = false];
  bool has_use_static_balanced_label_sampler() const;
  private:
  bool _internal_has_use_static_balanced_label_sampler() const;
  public:
  void clear_use_static_balanced_label_sampler();
  bool use_static_balanced_label_sampler() const;
  void set_use_static_balanced_label_sampler(bool value);
  private:
  bool _internal_use_static_balanced_label_sampler() const;
  void _internal_set_use_static_balanced_label_sampler(bool value);
  public:

  // optional bool use_static_shapes = 35 [default = false];
  bool has_use_static_shapes() const;
  private:
  bool _internal_has_use_static_shapes() const;
  public:
  void clear_use_static_shapes();
  bool use_static_shapes() const;
  void set_use_static_shapes(bool value);
  private:
  bool _internal_use_static_shapes() const;
  void _internal_set_use_static_shapes(bool value);
  public:

  // optional bool use_static_shapes_for_eval = 37 [default = false];
  bool has_use_static_shapes_for_eval() const;
  private:
  bool _internal_has_use_static_shapes_for_eval() const;
  public:
  void clear_use_static_shapes_for_eval();
  bool use_static_shapes_for_eval() const;
  void set_use_static_shapes_for_eval(bool value);
  private:
  bool _internal_use_static_shapes_for_eval() const;
  void _internal_set_use_static_shapes_for_eval(bool value);
  public:

  // optional int32 number_of_stages = 1 [default = 2];
  bool has_number_of_stages() const;
  private:
  bool _internal_has_number_of_stages() const;
  public:
  void clear_number_of_stages();
  ::PROTOBUF_NAMESPACE_ID::int32 number_of_stages() const;
  void set_number_of_stages(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_number_of_stages() const;
  void _internal_set_number_of_stages(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 first_stage_atrous_rate = 7 [default = 1];
  bool has_first_stage_atrous_rate() const;
  private:
  bool _internal_has_first_stage_atrous_rate() const;
  public:
  void clear_first_stage_atrous_rate();
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_atrous_rate() const;
  void set_first_stage_atrous_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_first_stage_atrous_rate() const;
  void _internal_set_first_stage_atrous_rate(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 first_stage_box_predictor_kernel_size = 9 [default = 3];
  bool has_first_stage_box_predictor_kernel_size() const;
  private:
  bool _internal_has_first_stage_box_predictor_kernel_size() const;
  public:
  void clear_first_stage_box_predictor_kernel_size();
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_box_predictor_kernel_size() const;
  void set_first_stage_box_predictor_kernel_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_first_stage_box_predictor_kernel_size() const;
  void _internal_set_first_stage_box_predictor_kernel_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 first_stage_box_predictor_depth = 10 [default = 512];
  bool has_first_stage_box_predictor_depth() const;
  private:
  bool _internal_has_first_stage_box_predictor_depth() const;
  public:
  void clear_first_stage_box_predictor_depth();
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_box_predictor_depth() const;
  void set_first_stage_box_predictor_depth(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_first_stage_box_predictor_depth() const;
  void _internal_set_first_stage_box_predictor_depth(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 first_stage_minibatch_size = 11 [default = 256];
  bool has_first_stage_minibatch_size() const;
  private:
  bool _internal_has_first_stage_minibatch_size() const;
  public:
  void clear_first_stage_minibatch_size();
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_minibatch_size() const;
  void set_first_stage_minibatch_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_first_stage_minibatch_size() const;
  void _internal_set_first_stage_minibatch_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float first_stage_positive_balance_fraction = 12 [default = 0.5];
  bool has_first_stage_positive_balance_fraction() const;
  private:
  bool _internal_has_first_stage_positive_balance_fraction() const;
  public:
  void clear_first_stage_positive_balance_fraction();
  float first_stage_positive_balance_fraction() const;
  void set_first_stage_positive_balance_fraction(float value);
  private:
  float _internal_first_stage_positive_balance_fraction() const;
  void _internal_set_first_stage_positive_balance_fraction(float value);
  public:

  // optional float first_stage_nms_iou_threshold = 14 [default = 0.7];
  bool has_first_stage_nms_iou_threshold() const;
  private:
  bool _internal_has_first_stage_nms_iou_threshold() const;
  public:
  void clear_first_stage_nms_iou_threshold();
  float first_stage_nms_iou_threshold() const;
  void set_first_stage_nms_iou_threshold(float value);
  private:
  float _internal_first_stage_nms_iou_threshold() const;
  void _internal_set_first_stage_nms_iou_threshold(float value);
  public:

  // optional int32 first_stage_max_proposals = 15 [default = 300];
  bool has_first_stage_max_proposals() const;
  private:
  bool _internal_has_first_stage_max_proposals() const;
  public:
  void clear_first_stage_max_proposals();
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_max_proposals() const;
  void set_first_stage_max_proposals(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_first_stage_max_proposals() const;
  void _internal_set_first_stage_max_proposals(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float first_stage_localization_loss_weight = 16 [default = 1];
  bool has_first_stage_localization_loss_weight() const;
  private:
  bool _internal_has_first_stage_localization_loss_weight() const;
  public:
  void clear_first_stage_localization_loss_weight();
  float first_stage_localization_loss_weight() const;
  void set_first_stage_localization_loss_weight(float value);
  private:
  float _internal_first_stage_localization_loss_weight() const;
  void _internal_set_first_stage_localization_loss_weight(float value);
  public:

  // optional float first_stage_objectness_loss_weight = 17 [default = 1];
  bool has_first_stage_objectness_loss_weight() const;
  private:
  bool _internal_has_first_stage_objectness_loss_weight() const;
  public:
  void clear_first_stage_objectness_loss_weight();
  float first_stage_objectness_loss_weight() const;
  void set_first_stage_objectness_loss_weight(float value);
  private:
  float _internal_first_stage_objectness_loss_weight() const;
  void _internal_set_first_stage_objectness_loss_weight(float value);
  public:

  // optional int32 second_stage_batch_size = 22 [default = 64];
  bool has_second_stage_batch_size() const;
  private:
  bool _internal_has_second_stage_batch_size() const;
  public:
  void clear_second_stage_batch_size();
  ::PROTOBUF_NAMESPACE_ID::int32 second_stage_batch_size() const;
  void set_second_stage_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_second_stage_batch_size() const;
  void _internal_set_second_stage_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float second_stage_balance_fraction = 23 [default = 0.25];
  bool has_second_stage_balance_fraction() const;
  private:
  bool _internal_has_second_stage_balance_fraction() const;
  public:
  void clear_second_stage_balance_fraction();
  float second_stage_balance_fraction() const;
  void set_second_stage_balance_fraction(float value);
  private:
  float _internal_second_stage_balance_fraction() const;
  void _internal_set_second_stage_balance_fraction(float value);
  public:

  // optional float second_stage_localization_loss_weight = 25 [default = 1];
  bool has_second_stage_localization_loss_weight() const;
  private:
  bool _internal_has_second_stage_localization_loss_weight() const;
  public:
  void clear_second_stage_localization_loss_weight();
  float second_stage_localization_loss_weight() const;
  void set_second_stage_localization_loss_weight(float value);
  private:
  float _internal_second_stage_localization_loss_weight() const;
  void _internal_set_second_stage_localization_loss_weight(float value);
  public:

  // optional float second_stage_classification_loss_weight = 26 [default = 1];
  bool has_second_stage_classification_loss_weight() const;
  private:
  bool _internal_has_second_stage_classification_loss_weight() const;
  public:
  void clear_second_stage_classification_loss_weight();
  float second_stage_classification_loss_weight() const;
  void set_second_stage_classification_loss_weight(float value);
  private:
  float _internal_second_stage_classification_loss_weight() const;
  void _internal_set_second_stage_classification_loss_weight(float value);
  public:

  // optional float second_stage_mask_prediction_loss_weight = 27 [default = 1];
  bool has_second_stage_mask_prediction_loss_weight() const;
  private:
  bool _internal_has_second_stage_mask_prediction_loss_weight() const;
  public:
  void clear_second_stage_mask_prediction_loss_weight();
  float second_stage_mask_prediction_loss_weight() const;
  void set_second_stage_mask_prediction_loss_weight(float value);
  private:
  float _internal_second_stage_mask_prediction_loss_weight() const;
  void _internal_set_second_stage_mask_prediction_loss_weight(float value);
  public:

  // optional bool resize_masks = 36 [default = true];
  bool has_resize_masks() const;
  private:
  bool _internal_has_resize_masks() const;
  public:
  void clear_resize_masks();
  bool resize_masks() const;
  void set_resize_masks(bool value);
  private:
  bool _internal_resize_masks() const;
  void _internal_set_resize_masks(bool value);
  public:

  // @@protoc_insertion_point(class_scope:object_detection.protos.FasterRcnn)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<2> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::object_detection::protos::ImageResizer* image_resizer_;
  ::object_detection::protos::FasterRcnnFeatureExtractor* feature_extractor_;
  ::object_detection::protos::AnchorGenerator* first_stage_anchor_generator_;
  ::object_detection::protos::Hyperparams* first_stage_box_predictor_conv_hyperparams_;
  ::object_detection::protos::BoxPredictor* second_stage_box_predictor_;
  ::object_detection::protos::PostProcessing* second_stage_post_processing_;
  ::object_detection::protos::HardExampleMiner* hard_example_miner_;
  ::object_detection::protos::ClassificationLoss* second_stage_classification_loss_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_classes_;
  float first_stage_nms_score_threshold_;
  ::PROTOBUF_NAMESPACE_ID::int32 initial_crop_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 maxpool_kernel_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 maxpool_stride_;
  bool inplace_batchnorm_update_;
  bool use_matmul_crop_and_resize_;
  bool clip_anchors_to_image_;
  bool use_matmul_gather_in_matcher_;
  bool use_static_balanced_label_sampler_;
  bool use_static_shapes_;
  bool use_static_shapes_for_eval_;
  ::PROTOBUF_NAMESPACE_ID::int32 number_of_stages_;
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_atrous_rate_;
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_box_predictor_kernel_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_box_predictor_depth_;
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_minibatch_size_;
  float first_stage_positive_balance_fraction_;
  float first_stage_nms_iou_threshold_;
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_max_proposals_;
  float first_stage_localization_loss_weight_;
  float first_stage_objectness_loss_weight_;
  ::PROTOBUF_NAMESPACE_ID::int32 second_stage_batch_size_;
  float second_stage_balance_fraction_;
  float second_stage_localization_loss_weight_;
  float second_stage_classification_loss_weight_;
  float second_stage_mask_prediction_loss_weight_;
  bool resize_masks_;
  friend struct ::TableStruct_object_5fdetection_2fprotos_2ffaster_5frcnn_2eproto;
};
// -------------------------------------------------------------------

class FasterRcnnFeatureExtractor final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.FasterRcnnFeatureExtractor) */ {
 public:
  inline FasterRcnnFeatureExtractor() : FasterRcnnFeatureExtractor(nullptr) {}
  ~FasterRcnnFeatureExtractor() override;
  explicit constexpr FasterRcnnFeatureExtractor(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FasterRcnnFeatureExtractor(const FasterRcnnFeatureExtractor& from);
  FasterRcnnFeatureExtractor(FasterRcnnFeatureExtractor&& from) noexcept
    : FasterRcnnFeatureExtractor() {
    *this = ::std::move(from);
  }

  inline FasterRcnnFeatureExtractor& operator=(const FasterRcnnFeatureExtractor& from) {
    CopyFrom(from);
    return *this;
  }
  inline FasterRcnnFeatureExtractor& operator=(FasterRcnnFeatureExtractor&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FasterRcnnFeatureExtractor& default_instance() {
    return *internal_default_instance();
  }
  static inline const FasterRcnnFeatureExtractor* internal_default_instance() {
    return reinterpret_cast<const FasterRcnnFeatureExtractor*>(
               &_FasterRcnnFeatureExtractor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(FasterRcnnFeatureExtractor& a, FasterRcnnFeatureExtractor& b) {
    a.Swap(&b);
  }
  inline void Swap(FasterRcnnFeatureExtractor* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FasterRcnnFeatureExtractor* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FasterRcnnFeatureExtractor* New() const final {
    return new FasterRcnnFeatureExtractor();
  }

  FasterRcnnFeatureExtractor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FasterRcnnFeatureExtractor>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FasterRcnnFeatureExtractor& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FasterRcnnFeatureExtractor& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FasterRcnnFeatureExtractor* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.FasterRcnnFeatureExtractor";
  }
  protected:
  explicit FasterRcnnFeatureExtractor(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kBatchNormTrainableFieldNumber = 3,
    kFirstStageFeaturesStrideFieldNumber = 2,
  };
  // optional string type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  const std::string& type() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_type(ArgT0&& arg0, ArgT... args);
  std::string* mutable_type();
  PROTOBUF_MUST_USE_RESULT std::string* release_type();
  void set_allocated_type(std::string* type);
  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(const std::string& value);
  std::string* _internal_mutable_type();
  public:

  // optional bool batch_norm_trainable = 3 [default = false];
  bool has_batch_norm_trainable() const;
  private:
  bool _internal_has_batch_norm_trainable() const;
  public:
  void clear_batch_norm_trainable();
  bool batch_norm_trainable() const;
  void set_batch_norm_trainable(bool value);
  private:
  bool _internal_batch_norm_trainable() const;
  void _internal_set_batch_norm_trainable(bool value);
  public:

  // optional int32 first_stage_features_stride = 2 [default = 16];
  bool has_first_stage_features_stride() const;
  private:
  bool _internal_has_first_stage_features_stride() const;
  public:
  void clear_first_stage_features_stride();
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_features_stride() const;
  void set_first_stage_features_stride(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_first_stage_features_stride() const;
  void _internal_set_first_stage_features_stride(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:object_detection.protos.FasterRcnnFeatureExtractor)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr type_;
  bool batch_norm_trainable_;
  ::PROTOBUF_NAMESPACE_ID::int32 first_stage_features_stride_;
  friend struct ::TableStruct_object_5fdetection_2fprotos_2ffaster_5frcnn_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FasterRcnn

// optional int32 number_of_stages = 1 [default = 2];
inline bool FasterRcnn::_internal_has_number_of_stages() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool FasterRcnn::has_number_of_stages() const {
  return _internal_has_number_of_stages();
}
inline void FasterRcnn::clear_number_of_stages() {
  number_of_stages_ = 2;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_number_of_stages() const {
  return number_of_stages_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::number_of_stages() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.number_of_stages)
  return _internal_number_of_stages();
}
inline void FasterRcnn::_internal_set_number_of_stages(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00100000u;
  number_of_stages_ = value;
}
inline void FasterRcnn::set_number_of_stages(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_number_of_stages(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.number_of_stages)
}

// optional int32 num_classes = 3;
inline bool FasterRcnn::_internal_has_num_classes() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool FasterRcnn::has_num_classes() const {
  return _internal_has_num_classes();
}
inline void FasterRcnn::clear_num_classes() {
  num_classes_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_num_classes() const {
  return num_classes_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::num_classes() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.num_classes)
  return _internal_num_classes();
}
inline void FasterRcnn::_internal_set_num_classes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  num_classes_ = value;
}
inline void FasterRcnn::set_num_classes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_classes(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.num_classes)
}

// optional .object_detection.protos.ImageResizer image_resizer = 4;
inline bool FasterRcnn::_internal_has_image_resizer() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || image_resizer_ != nullptr);
  return value;
}
inline bool FasterRcnn::has_image_resizer() const {
  return _internal_has_image_resizer();
}
inline const ::object_detection::protos::ImageResizer& FasterRcnn::_internal_image_resizer() const {
  const ::object_detection::protos::ImageResizer* p = image_resizer_;
  return p != nullptr ? *p : reinterpret_cast<const ::object_detection::protos::ImageResizer&>(
      ::object_detection::protos::_ImageResizer_default_instance_);
}
inline const ::object_detection::protos::ImageResizer& FasterRcnn::image_resizer() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.image_resizer)
  return _internal_image_resizer();
}
inline void FasterRcnn::unsafe_arena_set_allocated_image_resizer(
    ::object_detection::protos::ImageResizer* image_resizer) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(image_resizer_);
  }
  image_resizer_ = image_resizer;
  if (image_resizer) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.FasterRcnn.image_resizer)
}
inline ::object_detection::protos::ImageResizer* FasterRcnn::release_image_resizer() {
  _has_bits_[0] &= ~0x00000001u;
  ::object_detection::protos::ImageResizer* temp = image_resizer_;
  image_resizer_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::object_detection::protos::ImageResizer* FasterRcnn::unsafe_arena_release_image_resizer() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FasterRcnn.image_resizer)
  _has_bits_[0] &= ~0x00000001u;
  ::object_detection::protos::ImageResizer* temp = image_resizer_;
  image_resizer_ = nullptr;
  return temp;
}
inline ::object_detection::protos::ImageResizer* FasterRcnn::_internal_mutable_image_resizer() {
  _has_bits_[0] |= 0x00000001u;
  if (image_resizer_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::ImageResizer>(GetArenaForAllocation());
    image_resizer_ = p;
  }
  return image_resizer_;
}
inline ::object_detection::protos::ImageResizer* FasterRcnn::mutable_image_resizer() {
  ::object_detection::protos::ImageResizer* _msg = _internal_mutable_image_resizer();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FasterRcnn.image_resizer)
  return _msg;
}
inline void FasterRcnn::set_allocated_image_resizer(::object_detection::protos::ImageResizer* image_resizer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(image_resizer_);
  }
  if (image_resizer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(image_resizer));
    if (message_arena != submessage_arena) {
      image_resizer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, image_resizer, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  image_resizer_ = image_resizer;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FasterRcnn.image_resizer)
}

// optional .object_detection.protos.FasterRcnnFeatureExtractor feature_extractor = 5;
inline bool FasterRcnn::_internal_has_feature_extractor() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || feature_extractor_ != nullptr);
  return value;
}
inline bool FasterRcnn::has_feature_extractor() const {
  return _internal_has_feature_extractor();
}
inline void FasterRcnn::clear_feature_extractor() {
  if (feature_extractor_ != nullptr) feature_extractor_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::object_detection::protos::FasterRcnnFeatureExtractor& FasterRcnn::_internal_feature_extractor() const {
  const ::object_detection::protos::FasterRcnnFeatureExtractor* p = feature_extractor_;
  return p != nullptr ? *p : reinterpret_cast<const ::object_detection::protos::FasterRcnnFeatureExtractor&>(
      ::object_detection::protos::_FasterRcnnFeatureExtractor_default_instance_);
}
inline const ::object_detection::protos::FasterRcnnFeatureExtractor& FasterRcnn::feature_extractor() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.feature_extractor)
  return _internal_feature_extractor();
}
inline void FasterRcnn::unsafe_arena_set_allocated_feature_extractor(
    ::object_detection::protos::FasterRcnnFeatureExtractor* feature_extractor) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(feature_extractor_);
  }
  feature_extractor_ = feature_extractor;
  if (feature_extractor) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.FasterRcnn.feature_extractor)
}
inline ::object_detection::protos::FasterRcnnFeatureExtractor* FasterRcnn::release_feature_extractor() {
  _has_bits_[0] &= ~0x00000002u;
  ::object_detection::protos::FasterRcnnFeatureExtractor* temp = feature_extractor_;
  feature_extractor_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::object_detection::protos::FasterRcnnFeatureExtractor* FasterRcnn::unsafe_arena_release_feature_extractor() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FasterRcnn.feature_extractor)
  _has_bits_[0] &= ~0x00000002u;
  ::object_detection::protos::FasterRcnnFeatureExtractor* temp = feature_extractor_;
  feature_extractor_ = nullptr;
  return temp;
}
inline ::object_detection::protos::FasterRcnnFeatureExtractor* FasterRcnn::_internal_mutable_feature_extractor() {
  _has_bits_[0] |= 0x00000002u;
  if (feature_extractor_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::FasterRcnnFeatureExtractor>(GetArenaForAllocation());
    feature_extractor_ = p;
  }
  return feature_extractor_;
}
inline ::object_detection::protos::FasterRcnnFeatureExtractor* FasterRcnn::mutable_feature_extractor() {
  ::object_detection::protos::FasterRcnnFeatureExtractor* _msg = _internal_mutable_feature_extractor();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FasterRcnn.feature_extractor)
  return _msg;
}
inline void FasterRcnn::set_allocated_feature_extractor(::object_detection::protos::FasterRcnnFeatureExtractor* feature_extractor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete feature_extractor_;
  }
  if (feature_extractor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::object_detection::protos::FasterRcnnFeatureExtractor>::GetOwningArena(feature_extractor);
    if (message_arena != submessage_arena) {
      feature_extractor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, feature_extractor, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  feature_extractor_ = feature_extractor;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FasterRcnn.feature_extractor)
}

// optional .object_detection.protos.AnchorGenerator first_stage_anchor_generator = 6;
inline bool FasterRcnn::_internal_has_first_stage_anchor_generator() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || first_stage_anchor_generator_ != nullptr);
  return value;
}
inline bool FasterRcnn::has_first_stage_anchor_generator() const {
  return _internal_has_first_stage_anchor_generator();
}
inline const ::object_detection::protos::AnchorGenerator& FasterRcnn::_internal_first_stage_anchor_generator() const {
  const ::object_detection::protos::AnchorGenerator* p = first_stage_anchor_generator_;
  return p != nullptr ? *p : reinterpret_cast<const ::object_detection::protos::AnchorGenerator&>(
      ::object_detection::protos::_AnchorGenerator_default_instance_);
}
inline const ::object_detection::protos::AnchorGenerator& FasterRcnn::first_stage_anchor_generator() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_anchor_generator)
  return _internal_first_stage_anchor_generator();
}
inline void FasterRcnn::unsafe_arena_set_allocated_first_stage_anchor_generator(
    ::object_detection::protos::AnchorGenerator* first_stage_anchor_generator) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(first_stage_anchor_generator_);
  }
  first_stage_anchor_generator_ = first_stage_anchor_generator;
  if (first_stage_anchor_generator) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.FasterRcnn.first_stage_anchor_generator)
}
inline ::object_detection::protos::AnchorGenerator* FasterRcnn::release_first_stage_anchor_generator() {
  _has_bits_[0] &= ~0x00000004u;
  ::object_detection::protos::AnchorGenerator* temp = first_stage_anchor_generator_;
  first_stage_anchor_generator_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::object_detection::protos::AnchorGenerator* FasterRcnn::unsafe_arena_release_first_stage_anchor_generator() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FasterRcnn.first_stage_anchor_generator)
  _has_bits_[0] &= ~0x00000004u;
  ::object_detection::protos::AnchorGenerator* temp = first_stage_anchor_generator_;
  first_stage_anchor_generator_ = nullptr;
  return temp;
}
inline ::object_detection::protos::AnchorGenerator* FasterRcnn::_internal_mutable_first_stage_anchor_generator() {
  _has_bits_[0] |= 0x00000004u;
  if (first_stage_anchor_generator_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::AnchorGenerator>(GetArenaForAllocation());
    first_stage_anchor_generator_ = p;
  }
  return first_stage_anchor_generator_;
}
inline ::object_detection::protos::AnchorGenerator* FasterRcnn::mutable_first_stage_anchor_generator() {
  ::object_detection::protos::AnchorGenerator* _msg = _internal_mutable_first_stage_anchor_generator();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FasterRcnn.first_stage_anchor_generator)
  return _msg;
}
inline void FasterRcnn::set_allocated_first_stage_anchor_generator(::object_detection::protos::AnchorGenerator* first_stage_anchor_generator) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(first_stage_anchor_generator_);
  }
  if (first_stage_anchor_generator) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(first_stage_anchor_generator));
    if (message_arena != submessage_arena) {
      first_stage_anchor_generator = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, first_stage_anchor_generator, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  first_stage_anchor_generator_ = first_stage_anchor_generator;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FasterRcnn.first_stage_anchor_generator)
}

// optional int32 first_stage_atrous_rate = 7 [default = 1];
inline bool FasterRcnn::_internal_has_first_stage_atrous_rate() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_atrous_rate() const {
  return _internal_has_first_stage_atrous_rate();
}
inline void FasterRcnn::clear_first_stage_atrous_rate() {
  first_stage_atrous_rate_ = 1;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_first_stage_atrous_rate() const {
  return first_stage_atrous_rate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::first_stage_atrous_rate() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_atrous_rate)
  return _internal_first_stage_atrous_rate();
}
inline void FasterRcnn::_internal_set_first_stage_atrous_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00200000u;
  first_stage_atrous_rate_ = value;
}
inline void FasterRcnn::set_first_stage_atrous_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_first_stage_atrous_rate(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_atrous_rate)
}

// optional .object_detection.protos.Hyperparams first_stage_box_predictor_conv_hyperparams = 8;
inline bool FasterRcnn::_internal_has_first_stage_box_predictor_conv_hyperparams() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || first_stage_box_predictor_conv_hyperparams_ != nullptr);
  return value;
}
inline bool FasterRcnn::has_first_stage_box_predictor_conv_hyperparams() const {
  return _internal_has_first_stage_box_predictor_conv_hyperparams();
}
inline const ::object_detection::protos::Hyperparams& FasterRcnn::_internal_first_stage_box_predictor_conv_hyperparams() const {
  const ::object_detection::protos::Hyperparams* p = first_stage_box_predictor_conv_hyperparams_;
  return p != nullptr ? *p : reinterpret_cast<const ::object_detection::protos::Hyperparams&>(
      ::object_detection::protos::_Hyperparams_default_instance_);
}
inline const ::object_detection::protos::Hyperparams& FasterRcnn::first_stage_box_predictor_conv_hyperparams() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_box_predictor_conv_hyperparams)
  return _internal_first_stage_box_predictor_conv_hyperparams();
}
inline void FasterRcnn::unsafe_arena_set_allocated_first_stage_box_predictor_conv_hyperparams(
    ::object_detection::protos::Hyperparams* first_stage_box_predictor_conv_hyperparams) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(first_stage_box_predictor_conv_hyperparams_);
  }
  first_stage_box_predictor_conv_hyperparams_ = first_stage_box_predictor_conv_hyperparams;
  if (first_stage_box_predictor_conv_hyperparams) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.FasterRcnn.first_stage_box_predictor_conv_hyperparams)
}
inline ::object_detection::protos::Hyperparams* FasterRcnn::release_first_stage_box_predictor_conv_hyperparams() {
  _has_bits_[0] &= ~0x00000008u;
  ::object_detection::protos::Hyperparams* temp = first_stage_box_predictor_conv_hyperparams_;
  first_stage_box_predictor_conv_hyperparams_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::object_detection::protos::Hyperparams* FasterRcnn::unsafe_arena_release_first_stage_box_predictor_conv_hyperparams() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FasterRcnn.first_stage_box_predictor_conv_hyperparams)
  _has_bits_[0] &= ~0x00000008u;
  ::object_detection::protos::Hyperparams* temp = first_stage_box_predictor_conv_hyperparams_;
  first_stage_box_predictor_conv_hyperparams_ = nullptr;
  return temp;
}
inline ::object_detection::protos::Hyperparams* FasterRcnn::_internal_mutable_first_stage_box_predictor_conv_hyperparams() {
  _has_bits_[0] |= 0x00000008u;
  if (first_stage_box_predictor_conv_hyperparams_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::Hyperparams>(GetArenaForAllocation());
    first_stage_box_predictor_conv_hyperparams_ = p;
  }
  return first_stage_box_predictor_conv_hyperparams_;
}
inline ::object_detection::protos::Hyperparams* FasterRcnn::mutable_first_stage_box_predictor_conv_hyperparams() {
  ::object_detection::protos::Hyperparams* _msg = _internal_mutable_first_stage_box_predictor_conv_hyperparams();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FasterRcnn.first_stage_box_predictor_conv_hyperparams)
  return _msg;
}
inline void FasterRcnn::set_allocated_first_stage_box_predictor_conv_hyperparams(::object_detection::protos::Hyperparams* first_stage_box_predictor_conv_hyperparams) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(first_stage_box_predictor_conv_hyperparams_);
  }
  if (first_stage_box_predictor_conv_hyperparams) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(first_stage_box_predictor_conv_hyperparams));
    if (message_arena != submessage_arena) {
      first_stage_box_predictor_conv_hyperparams = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, first_stage_box_predictor_conv_hyperparams, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  first_stage_box_predictor_conv_hyperparams_ = first_stage_box_predictor_conv_hyperparams;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FasterRcnn.first_stage_box_predictor_conv_hyperparams)
}

// optional int32 first_stage_box_predictor_kernel_size = 9 [default = 3];
inline bool FasterRcnn::_internal_has_first_stage_box_predictor_kernel_size() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_box_predictor_kernel_size() const {
  return _internal_has_first_stage_box_predictor_kernel_size();
}
inline void FasterRcnn::clear_first_stage_box_predictor_kernel_size() {
  first_stage_box_predictor_kernel_size_ = 3;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_first_stage_box_predictor_kernel_size() const {
  return first_stage_box_predictor_kernel_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::first_stage_box_predictor_kernel_size() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_box_predictor_kernel_size)
  return _internal_first_stage_box_predictor_kernel_size();
}
inline void FasterRcnn::_internal_set_first_stage_box_predictor_kernel_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00400000u;
  first_stage_box_predictor_kernel_size_ = value;
}
inline void FasterRcnn::set_first_stage_box_predictor_kernel_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_first_stage_box_predictor_kernel_size(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_box_predictor_kernel_size)
}

// optional int32 first_stage_box_predictor_depth = 10 [default = 512];
inline bool FasterRcnn::_internal_has_first_stage_box_predictor_depth() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_box_predictor_depth() const {
  return _internal_has_first_stage_box_predictor_depth();
}
inline void FasterRcnn::clear_first_stage_box_predictor_depth() {
  first_stage_box_predictor_depth_ = 512;
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_first_stage_box_predictor_depth() const {
  return first_stage_box_predictor_depth_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::first_stage_box_predictor_depth() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_box_predictor_depth)
  return _internal_first_stage_box_predictor_depth();
}
inline void FasterRcnn::_internal_set_first_stage_box_predictor_depth(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00800000u;
  first_stage_box_predictor_depth_ = value;
}
inline void FasterRcnn::set_first_stage_box_predictor_depth(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_first_stage_box_predictor_depth(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_box_predictor_depth)
}

// optional int32 first_stage_minibatch_size = 11 [default = 256];
inline bool FasterRcnn::_internal_has_first_stage_minibatch_size() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_minibatch_size() const {
  return _internal_has_first_stage_minibatch_size();
}
inline void FasterRcnn::clear_first_stage_minibatch_size() {
  first_stage_minibatch_size_ = 256;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_first_stage_minibatch_size() const {
  return first_stage_minibatch_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::first_stage_minibatch_size() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_minibatch_size)
  return _internal_first_stage_minibatch_size();
}
inline void FasterRcnn::_internal_set_first_stage_minibatch_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x01000000u;
  first_stage_minibatch_size_ = value;
}
inline void FasterRcnn::set_first_stage_minibatch_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_first_stage_minibatch_size(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_minibatch_size)
}

// optional float first_stage_positive_balance_fraction = 12 [default = 0.5];
inline bool FasterRcnn::_internal_has_first_stage_positive_balance_fraction() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_positive_balance_fraction() const {
  return _internal_has_first_stage_positive_balance_fraction();
}
inline void FasterRcnn::clear_first_stage_positive_balance_fraction() {
  first_stage_positive_balance_fraction_ = 0.5f;
  _has_bits_[0] &= ~0x02000000u;
}
inline float FasterRcnn::_internal_first_stage_positive_balance_fraction() const {
  return first_stage_positive_balance_fraction_;
}
inline float FasterRcnn::first_stage_positive_balance_fraction() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_positive_balance_fraction)
  return _internal_first_stage_positive_balance_fraction();
}
inline void FasterRcnn::_internal_set_first_stage_positive_balance_fraction(float value) {
  _has_bits_[0] |= 0x02000000u;
  first_stage_positive_balance_fraction_ = value;
}
inline void FasterRcnn::set_first_stage_positive_balance_fraction(float value) {
  _internal_set_first_stage_positive_balance_fraction(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_positive_balance_fraction)
}

// optional float first_stage_nms_score_threshold = 13 [default = 0];
inline bool FasterRcnn::_internal_has_first_stage_nms_score_threshold() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_nms_score_threshold() const {
  return _internal_has_first_stage_nms_score_threshold();
}
inline void FasterRcnn::clear_first_stage_nms_score_threshold() {
  first_stage_nms_score_threshold_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline float FasterRcnn::_internal_first_stage_nms_score_threshold() const {
  return first_stage_nms_score_threshold_;
}
inline float FasterRcnn::first_stage_nms_score_threshold() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_nms_score_threshold)
  return _internal_first_stage_nms_score_threshold();
}
inline void FasterRcnn::_internal_set_first_stage_nms_score_threshold(float value) {
  _has_bits_[0] |= 0x00000200u;
  first_stage_nms_score_threshold_ = value;
}
inline void FasterRcnn::set_first_stage_nms_score_threshold(float value) {
  _internal_set_first_stage_nms_score_threshold(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_nms_score_threshold)
}

// optional float first_stage_nms_iou_threshold = 14 [default = 0.7];
inline bool FasterRcnn::_internal_has_first_stage_nms_iou_threshold() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_nms_iou_threshold() const {
  return _internal_has_first_stage_nms_iou_threshold();
}
inline void FasterRcnn::clear_first_stage_nms_iou_threshold() {
  first_stage_nms_iou_threshold_ = 0.7f;
  _has_bits_[0] &= ~0x04000000u;
}
inline float FasterRcnn::_internal_first_stage_nms_iou_threshold() const {
  return first_stage_nms_iou_threshold_;
}
inline float FasterRcnn::first_stage_nms_iou_threshold() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_nms_iou_threshold)
  return _internal_first_stage_nms_iou_threshold();
}
inline void FasterRcnn::_internal_set_first_stage_nms_iou_threshold(float value) {
  _has_bits_[0] |= 0x04000000u;
  first_stage_nms_iou_threshold_ = value;
}
inline void FasterRcnn::set_first_stage_nms_iou_threshold(float value) {
  _internal_set_first_stage_nms_iou_threshold(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_nms_iou_threshold)
}

// optional int32 first_stage_max_proposals = 15 [default = 300];
inline bool FasterRcnn::_internal_has_first_stage_max_proposals() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_max_proposals() const {
  return _internal_has_first_stage_max_proposals();
}
inline void FasterRcnn::clear_first_stage_max_proposals() {
  first_stage_max_proposals_ = 300;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_first_stage_max_proposals() const {
  return first_stage_max_proposals_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::first_stage_max_proposals() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_max_proposals)
  return _internal_first_stage_max_proposals();
}
inline void FasterRcnn::_internal_set_first_stage_max_proposals(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x08000000u;
  first_stage_max_proposals_ = value;
}
inline void FasterRcnn::set_first_stage_max_proposals(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_first_stage_max_proposals(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_max_proposals)
}

// optional float first_stage_localization_loss_weight = 16 [default = 1];
inline bool FasterRcnn::_internal_has_first_stage_localization_loss_weight() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_localization_loss_weight() const {
  return _internal_has_first_stage_localization_loss_weight();
}
inline void FasterRcnn::clear_first_stage_localization_loss_weight() {
  first_stage_localization_loss_weight_ = 1;
  _has_bits_[0] &= ~0x10000000u;
}
inline float FasterRcnn::_internal_first_stage_localization_loss_weight() const {
  return first_stage_localization_loss_weight_;
}
inline float FasterRcnn::first_stage_localization_loss_weight() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_localization_loss_weight)
  return _internal_first_stage_localization_loss_weight();
}
inline void FasterRcnn::_internal_set_first_stage_localization_loss_weight(float value) {
  _has_bits_[0] |= 0x10000000u;
  first_stage_localization_loss_weight_ = value;
}
inline void FasterRcnn::set_first_stage_localization_loss_weight(float value) {
  _internal_set_first_stage_localization_loss_weight(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_localization_loss_weight)
}

// optional float first_stage_objectness_loss_weight = 17 [default = 1];
inline bool FasterRcnn::_internal_has_first_stage_objectness_loss_weight() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool FasterRcnn::has_first_stage_objectness_loss_weight() const {
  return _internal_has_first_stage_objectness_loss_weight();
}
inline void FasterRcnn::clear_first_stage_objectness_loss_weight() {
  first_stage_objectness_loss_weight_ = 1;
  _has_bits_[0] &= ~0x20000000u;
}
inline float FasterRcnn::_internal_first_stage_objectness_loss_weight() const {
  return first_stage_objectness_loss_weight_;
}
inline float FasterRcnn::first_stage_objectness_loss_weight() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.first_stage_objectness_loss_weight)
  return _internal_first_stage_objectness_loss_weight();
}
inline void FasterRcnn::_internal_set_first_stage_objectness_loss_weight(float value) {
  _has_bits_[0] |= 0x20000000u;
  first_stage_objectness_loss_weight_ = value;
}
inline void FasterRcnn::set_first_stage_objectness_loss_weight(float value) {
  _internal_set_first_stage_objectness_loss_weight(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.first_stage_objectness_loss_weight)
}

// optional int32 initial_crop_size = 18;
inline bool FasterRcnn::_internal_has_initial_crop_size() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool FasterRcnn::has_initial_crop_size() const {
  return _internal_has_initial_crop_size();
}
inline void FasterRcnn::clear_initial_crop_size() {
  initial_crop_size_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_initial_crop_size() const {
  return initial_crop_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::initial_crop_size() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.initial_crop_size)
  return _internal_initial_crop_size();
}
inline void FasterRcnn::_internal_set_initial_crop_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  initial_crop_size_ = value;
}
inline void FasterRcnn::set_initial_crop_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_initial_crop_size(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.initial_crop_size)
}

// optional int32 maxpool_kernel_size = 19;
inline bool FasterRcnn::_internal_has_maxpool_kernel_size() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool FasterRcnn::has_maxpool_kernel_size() const {
  return _internal_has_maxpool_kernel_size();
}
inline void FasterRcnn::clear_maxpool_kernel_size() {
  maxpool_kernel_size_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_maxpool_kernel_size() const {
  return maxpool_kernel_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::maxpool_kernel_size() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.maxpool_kernel_size)
  return _internal_maxpool_kernel_size();
}
inline void FasterRcnn::_internal_set_maxpool_kernel_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  maxpool_kernel_size_ = value;
}
inline void FasterRcnn::set_maxpool_kernel_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_maxpool_kernel_size(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.maxpool_kernel_size)
}

// optional int32 maxpool_stride = 20;
inline bool FasterRcnn::_internal_has_maxpool_stride() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool FasterRcnn::has_maxpool_stride() const {
  return _internal_has_maxpool_stride();
}
inline void FasterRcnn::clear_maxpool_stride() {
  maxpool_stride_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_maxpool_stride() const {
  return maxpool_stride_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::maxpool_stride() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.maxpool_stride)
  return _internal_maxpool_stride();
}
inline void FasterRcnn::_internal_set_maxpool_stride(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  maxpool_stride_ = value;
}
inline void FasterRcnn::set_maxpool_stride(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_maxpool_stride(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.maxpool_stride)
}

// optional .object_detection.protos.BoxPredictor second_stage_box_predictor = 21;
inline bool FasterRcnn::_internal_has_second_stage_box_predictor() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || second_stage_box_predictor_ != nullptr);
  return value;
}
inline bool FasterRcnn::has_second_stage_box_predictor() const {
  return _internal_has_second_stage_box_predictor();
}
inline const ::object_detection::protos::BoxPredictor& FasterRcnn::_internal_second_stage_box_predictor() const {
  const ::object_detection::protos::BoxPredictor* p = second_stage_box_predictor_;
  return p != nullptr ? *p : reinterpret_cast<const ::object_detection::protos::BoxPredictor&>(
      ::object_detection::protos::_BoxPredictor_default_instance_);
}
inline const ::object_detection::protos::BoxPredictor& FasterRcnn::second_stage_box_predictor() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.second_stage_box_predictor)
  return _internal_second_stage_box_predictor();
}
inline void FasterRcnn::unsafe_arena_set_allocated_second_stage_box_predictor(
    ::object_detection::protos::BoxPredictor* second_stage_box_predictor) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(second_stage_box_predictor_);
  }
  second_stage_box_predictor_ = second_stage_box_predictor;
  if (second_stage_box_predictor) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.FasterRcnn.second_stage_box_predictor)
}
inline ::object_detection::protos::BoxPredictor* FasterRcnn::release_second_stage_box_predictor() {
  _has_bits_[0] &= ~0x00000010u;
  ::object_detection::protos::BoxPredictor* temp = second_stage_box_predictor_;
  second_stage_box_predictor_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::object_detection::protos::BoxPredictor* FasterRcnn::unsafe_arena_release_second_stage_box_predictor() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FasterRcnn.second_stage_box_predictor)
  _has_bits_[0] &= ~0x00000010u;
  ::object_detection::protos::BoxPredictor* temp = second_stage_box_predictor_;
  second_stage_box_predictor_ = nullptr;
  return temp;
}
inline ::object_detection::protos::BoxPredictor* FasterRcnn::_internal_mutable_second_stage_box_predictor() {
  _has_bits_[0] |= 0x00000010u;
  if (second_stage_box_predictor_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::BoxPredictor>(GetArenaForAllocation());
    second_stage_box_predictor_ = p;
  }
  return second_stage_box_predictor_;
}
inline ::object_detection::protos::BoxPredictor* FasterRcnn::mutable_second_stage_box_predictor() {
  ::object_detection::protos::BoxPredictor* _msg = _internal_mutable_second_stage_box_predictor();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FasterRcnn.second_stage_box_predictor)
  return _msg;
}
inline void FasterRcnn::set_allocated_second_stage_box_predictor(::object_detection::protos::BoxPredictor* second_stage_box_predictor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(second_stage_box_predictor_);
  }
  if (second_stage_box_predictor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(second_stage_box_predictor));
    if (message_arena != submessage_arena) {
      second_stage_box_predictor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, second_stage_box_predictor, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  second_stage_box_predictor_ = second_stage_box_predictor;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FasterRcnn.second_stage_box_predictor)
}

// optional int32 second_stage_batch_size = 22 [default = 64];
inline bool FasterRcnn::_internal_has_second_stage_batch_size() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool FasterRcnn::has_second_stage_batch_size() const {
  return _internal_has_second_stage_batch_size();
}
inline void FasterRcnn::clear_second_stage_batch_size() {
  second_stage_batch_size_ = 64;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::_internal_second_stage_batch_size() const {
  return second_stage_batch_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnn::second_stage_batch_size() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.second_stage_batch_size)
  return _internal_second_stage_batch_size();
}
inline void FasterRcnn::_internal_set_second_stage_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x40000000u;
  second_stage_batch_size_ = value;
}
inline void FasterRcnn::set_second_stage_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_second_stage_batch_size(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.second_stage_batch_size)
}

// optional float second_stage_balance_fraction = 23 [default = 0.25];
inline bool FasterRcnn::_internal_has_second_stage_balance_fraction() const {
  bool value = (_has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool FasterRcnn::has_second_stage_balance_fraction() const {
  return _internal_has_second_stage_balance_fraction();
}
inline void FasterRcnn::clear_second_stage_balance_fraction() {
  second_stage_balance_fraction_ = 0.25f;
  _has_bits_[0] &= ~0x80000000u;
}
inline float FasterRcnn::_internal_second_stage_balance_fraction() const {
  return second_stage_balance_fraction_;
}
inline float FasterRcnn::second_stage_balance_fraction() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.second_stage_balance_fraction)
  return _internal_second_stage_balance_fraction();
}
inline void FasterRcnn::_internal_set_second_stage_balance_fraction(float value) {
  _has_bits_[0] |= 0x80000000u;
  second_stage_balance_fraction_ = value;
}
inline void FasterRcnn::set_second_stage_balance_fraction(float value) {
  _internal_set_second_stage_balance_fraction(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.second_stage_balance_fraction)
}

// optional .object_detection.protos.PostProcessing second_stage_post_processing = 24;
inline bool FasterRcnn::_internal_has_second_stage_post_processing() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || second_stage_post_processing_ != nullptr);
  return value;
}
inline bool FasterRcnn::has_second_stage_post_processing() const {
  return _internal_has_second_stage_post_processing();
}
inline const ::object_detection::protos::PostProcessing& FasterRcnn::_internal_second_stage_post_processing() const {
  const ::object_detection::protos::PostProcessing* p = second_stage_post_processing_;
  return p != nullptr ? *p : reinterpret_cast<const ::object_detection::protos::PostProcessing&>(
      ::object_detection::protos::_PostProcessing_default_instance_);
}
inline const ::object_detection::protos::PostProcessing& FasterRcnn::second_stage_post_processing() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.second_stage_post_processing)
  return _internal_second_stage_post_processing();
}
inline void FasterRcnn::unsafe_arena_set_allocated_second_stage_post_processing(
    ::object_detection::protos::PostProcessing* second_stage_post_processing) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(second_stage_post_processing_);
  }
  second_stage_post_processing_ = second_stage_post_processing;
  if (second_stage_post_processing) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.FasterRcnn.second_stage_post_processing)
}
inline ::object_detection::protos::PostProcessing* FasterRcnn::release_second_stage_post_processing() {
  _has_bits_[0] &= ~0x00000020u;
  ::object_detection::protos::PostProcessing* temp = second_stage_post_processing_;
  second_stage_post_processing_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::object_detection::protos::PostProcessing* FasterRcnn::unsafe_arena_release_second_stage_post_processing() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FasterRcnn.second_stage_post_processing)
  _has_bits_[0] &= ~0x00000020u;
  ::object_detection::protos::PostProcessing* temp = second_stage_post_processing_;
  second_stage_post_processing_ = nullptr;
  return temp;
}
inline ::object_detection::protos::PostProcessing* FasterRcnn::_internal_mutable_second_stage_post_processing() {
  _has_bits_[0] |= 0x00000020u;
  if (second_stage_post_processing_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::PostProcessing>(GetArenaForAllocation());
    second_stage_post_processing_ = p;
  }
  return second_stage_post_processing_;
}
inline ::object_detection::protos::PostProcessing* FasterRcnn::mutable_second_stage_post_processing() {
  ::object_detection::protos::PostProcessing* _msg = _internal_mutable_second_stage_post_processing();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FasterRcnn.second_stage_post_processing)
  return _msg;
}
inline void FasterRcnn::set_allocated_second_stage_post_processing(::object_detection::protos::PostProcessing* second_stage_post_processing) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(second_stage_post_processing_);
  }
  if (second_stage_post_processing) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(second_stage_post_processing));
    if (message_arena != submessage_arena) {
      second_stage_post_processing = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, second_stage_post_processing, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  second_stage_post_processing_ = second_stage_post_processing;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FasterRcnn.second_stage_post_processing)
}

// optional float second_stage_localization_loss_weight = 25 [default = 1];
inline bool FasterRcnn::_internal_has_second_stage_localization_loss_weight() const {
  bool value = (_has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline bool FasterRcnn::has_second_stage_localization_loss_weight() const {
  return _internal_has_second_stage_localization_loss_weight();
}
inline void FasterRcnn::clear_second_stage_localization_loss_weight() {
  second_stage_localization_loss_weight_ = 1;
  _has_bits_[1] &= ~0x00000001u;
}
inline float FasterRcnn::_internal_second_stage_localization_loss_weight() const {
  return second_stage_localization_loss_weight_;
}
inline float FasterRcnn::second_stage_localization_loss_weight() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.second_stage_localization_loss_weight)
  return _internal_second_stage_localization_loss_weight();
}
inline void FasterRcnn::_internal_set_second_stage_localization_loss_weight(float value) {
  _has_bits_[1] |= 0x00000001u;
  second_stage_localization_loss_weight_ = value;
}
inline void FasterRcnn::set_second_stage_localization_loss_weight(float value) {
  _internal_set_second_stage_localization_loss_weight(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.second_stage_localization_loss_weight)
}

// optional float second_stage_classification_loss_weight = 26 [default = 1];
inline bool FasterRcnn::_internal_has_second_stage_classification_loss_weight() const {
  bool value = (_has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline bool FasterRcnn::has_second_stage_classification_loss_weight() const {
  return _internal_has_second_stage_classification_loss_weight();
}
inline void FasterRcnn::clear_second_stage_classification_loss_weight() {
  second_stage_classification_loss_weight_ = 1;
  _has_bits_[1] &= ~0x00000002u;
}
inline float FasterRcnn::_internal_second_stage_classification_loss_weight() const {
  return second_stage_classification_loss_weight_;
}
inline float FasterRcnn::second_stage_classification_loss_weight() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.second_stage_classification_loss_weight)
  return _internal_second_stage_classification_loss_weight();
}
inline void FasterRcnn::_internal_set_second_stage_classification_loss_weight(float value) {
  _has_bits_[1] |= 0x00000002u;
  second_stage_classification_loss_weight_ = value;
}
inline void FasterRcnn::set_second_stage_classification_loss_weight(float value) {
  _internal_set_second_stage_classification_loss_weight(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.second_stage_classification_loss_weight)
}

// optional float second_stage_mask_prediction_loss_weight = 27 [default = 1];
inline bool FasterRcnn::_internal_has_second_stage_mask_prediction_loss_weight() const {
  bool value = (_has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline bool FasterRcnn::has_second_stage_mask_prediction_loss_weight() const {
  return _internal_has_second_stage_mask_prediction_loss_weight();
}
inline void FasterRcnn::clear_second_stage_mask_prediction_loss_weight() {
  second_stage_mask_prediction_loss_weight_ = 1;
  _has_bits_[1] &= ~0x00000004u;
}
inline float FasterRcnn::_internal_second_stage_mask_prediction_loss_weight() const {
  return second_stage_mask_prediction_loss_weight_;
}
inline float FasterRcnn::second_stage_mask_prediction_loss_weight() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.second_stage_mask_prediction_loss_weight)
  return _internal_second_stage_mask_prediction_loss_weight();
}
inline void FasterRcnn::_internal_set_second_stage_mask_prediction_loss_weight(float value) {
  _has_bits_[1] |= 0x00000004u;
  second_stage_mask_prediction_loss_weight_ = value;
}
inline void FasterRcnn::set_second_stage_mask_prediction_loss_weight(float value) {
  _internal_set_second_stage_mask_prediction_loss_weight(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.second_stage_mask_prediction_loss_weight)
}

// optional .object_detection.protos.HardExampleMiner hard_example_miner = 28;
inline bool FasterRcnn::_internal_has_hard_example_miner() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || hard_example_miner_ != nullptr);
  return value;
}
inline bool FasterRcnn::has_hard_example_miner() const {
  return _internal_has_hard_example_miner();
}
inline const ::object_detection::protos::HardExampleMiner& FasterRcnn::_internal_hard_example_miner() const {
  const ::object_detection::protos::HardExampleMiner* p = hard_example_miner_;
  return p != nullptr ? *p : reinterpret_cast<const ::object_detection::protos::HardExampleMiner&>(
      ::object_detection::protos::_HardExampleMiner_default_instance_);
}
inline const ::object_detection::protos::HardExampleMiner& FasterRcnn::hard_example_miner() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.hard_example_miner)
  return _internal_hard_example_miner();
}
inline void FasterRcnn::unsafe_arena_set_allocated_hard_example_miner(
    ::object_detection::protos::HardExampleMiner* hard_example_miner) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hard_example_miner_);
  }
  hard_example_miner_ = hard_example_miner;
  if (hard_example_miner) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.FasterRcnn.hard_example_miner)
}
inline ::object_detection::protos::HardExampleMiner* FasterRcnn::release_hard_example_miner() {
  _has_bits_[0] &= ~0x00000040u;
  ::object_detection::protos::HardExampleMiner* temp = hard_example_miner_;
  hard_example_miner_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::object_detection::protos::HardExampleMiner* FasterRcnn::unsafe_arena_release_hard_example_miner() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FasterRcnn.hard_example_miner)
  _has_bits_[0] &= ~0x00000040u;
  ::object_detection::protos::HardExampleMiner* temp = hard_example_miner_;
  hard_example_miner_ = nullptr;
  return temp;
}
inline ::object_detection::protos::HardExampleMiner* FasterRcnn::_internal_mutable_hard_example_miner() {
  _has_bits_[0] |= 0x00000040u;
  if (hard_example_miner_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::HardExampleMiner>(GetArenaForAllocation());
    hard_example_miner_ = p;
  }
  return hard_example_miner_;
}
inline ::object_detection::protos::HardExampleMiner* FasterRcnn::mutable_hard_example_miner() {
  ::object_detection::protos::HardExampleMiner* _msg = _internal_mutable_hard_example_miner();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FasterRcnn.hard_example_miner)
  return _msg;
}
inline void FasterRcnn::set_allocated_hard_example_miner(::object_detection::protos::HardExampleMiner* hard_example_miner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hard_example_miner_);
  }
  if (hard_example_miner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hard_example_miner));
    if (message_arena != submessage_arena) {
      hard_example_miner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hard_example_miner, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  hard_example_miner_ = hard_example_miner;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FasterRcnn.hard_example_miner)
}

// optional .object_detection.protos.ClassificationLoss second_stage_classification_loss = 29;
inline bool FasterRcnn::_internal_has_second_stage_classification_loss() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || second_stage_classification_loss_ != nullptr);
  return value;
}
inline bool FasterRcnn::has_second_stage_classification_loss() const {
  return _internal_has_second_stage_classification_loss();
}
inline const ::object_detection::protos::ClassificationLoss& FasterRcnn::_internal_second_stage_classification_loss() const {
  const ::object_detection::protos::ClassificationLoss* p = second_stage_classification_loss_;
  return p != nullptr ? *p : reinterpret_cast<const ::object_detection::protos::ClassificationLoss&>(
      ::object_detection::protos::_ClassificationLoss_default_instance_);
}
inline const ::object_detection::protos::ClassificationLoss& FasterRcnn::second_stage_classification_loss() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.second_stage_classification_loss)
  return _internal_second_stage_classification_loss();
}
inline void FasterRcnn::unsafe_arena_set_allocated_second_stage_classification_loss(
    ::object_detection::protos::ClassificationLoss* second_stage_classification_loss) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(second_stage_classification_loss_);
  }
  second_stage_classification_loss_ = second_stage_classification_loss;
  if (second_stage_classification_loss) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.FasterRcnn.second_stage_classification_loss)
}
inline ::object_detection::protos::ClassificationLoss* FasterRcnn::release_second_stage_classification_loss() {
  _has_bits_[0] &= ~0x00000080u;
  ::object_detection::protos::ClassificationLoss* temp = second_stage_classification_loss_;
  second_stage_classification_loss_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::object_detection::protos::ClassificationLoss* FasterRcnn::unsafe_arena_release_second_stage_classification_loss() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FasterRcnn.second_stage_classification_loss)
  _has_bits_[0] &= ~0x00000080u;
  ::object_detection::protos::ClassificationLoss* temp = second_stage_classification_loss_;
  second_stage_classification_loss_ = nullptr;
  return temp;
}
inline ::object_detection::protos::ClassificationLoss* FasterRcnn::_internal_mutable_second_stage_classification_loss() {
  _has_bits_[0] |= 0x00000080u;
  if (second_stage_classification_loss_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::ClassificationLoss>(GetArenaForAllocation());
    second_stage_classification_loss_ = p;
  }
  return second_stage_classification_loss_;
}
inline ::object_detection::protos::ClassificationLoss* FasterRcnn::mutable_second_stage_classification_loss() {
  ::object_detection::protos::ClassificationLoss* _msg = _internal_mutable_second_stage_classification_loss();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FasterRcnn.second_stage_classification_loss)
  return _msg;
}
inline void FasterRcnn::set_allocated_second_stage_classification_loss(::object_detection::protos::ClassificationLoss* second_stage_classification_loss) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(second_stage_classification_loss_);
  }
  if (second_stage_classification_loss) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(second_stage_classification_loss));
    if (message_arena != submessage_arena) {
      second_stage_classification_loss = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, second_stage_classification_loss, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  second_stage_classification_loss_ = second_stage_classification_loss;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FasterRcnn.second_stage_classification_loss)
}

// optional bool inplace_batchnorm_update = 30 [default = false];
inline bool FasterRcnn::_internal_has_inplace_batchnorm_update() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool FasterRcnn::has_inplace_batchnorm_update() const {
  return _internal_has_inplace_batchnorm_update();
}
inline void FasterRcnn::clear_inplace_batchnorm_update() {
  inplace_batchnorm_update_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool FasterRcnn::_internal_inplace_batchnorm_update() const {
  return inplace_batchnorm_update_;
}
inline bool FasterRcnn::inplace_batchnorm_update() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.inplace_batchnorm_update)
  return _internal_inplace_batchnorm_update();
}
inline void FasterRcnn::_internal_set_inplace_batchnorm_update(bool value) {
  _has_bits_[0] |= 0x00002000u;
  inplace_batchnorm_update_ = value;
}
inline void FasterRcnn::set_inplace_batchnorm_update(bool value) {
  _internal_set_inplace_batchnorm_update(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.inplace_batchnorm_update)
}

// optional bool use_matmul_crop_and_resize = 31 [default = false];
inline bool FasterRcnn::_internal_has_use_matmul_crop_and_resize() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool FasterRcnn::has_use_matmul_crop_and_resize() const {
  return _internal_has_use_matmul_crop_and_resize();
}
inline void FasterRcnn::clear_use_matmul_crop_and_resize() {
  use_matmul_crop_and_resize_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool FasterRcnn::_internal_use_matmul_crop_and_resize() const {
  return use_matmul_crop_and_resize_;
}
inline bool FasterRcnn::use_matmul_crop_and_resize() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.use_matmul_crop_and_resize)
  return _internal_use_matmul_crop_and_resize();
}
inline void FasterRcnn::_internal_set_use_matmul_crop_and_resize(bool value) {
  _has_bits_[0] |= 0x00004000u;
  use_matmul_crop_and_resize_ = value;
}
inline void FasterRcnn::set_use_matmul_crop_and_resize(bool value) {
  _internal_set_use_matmul_crop_and_resize(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.use_matmul_crop_and_resize)
}

// optional bool clip_anchors_to_image = 32 [default = false];
inline bool FasterRcnn::_internal_has_clip_anchors_to_image() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool FasterRcnn::has_clip_anchors_to_image() const {
  return _internal_has_clip_anchors_to_image();
}
inline void FasterRcnn::clear_clip_anchors_to_image() {
  clip_anchors_to_image_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool FasterRcnn::_internal_clip_anchors_to_image() const {
  return clip_anchors_to_image_;
}
inline bool FasterRcnn::clip_anchors_to_image() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.clip_anchors_to_image)
  return _internal_clip_anchors_to_image();
}
inline void FasterRcnn::_internal_set_clip_anchors_to_image(bool value) {
  _has_bits_[0] |= 0x00008000u;
  clip_anchors_to_image_ = value;
}
inline void FasterRcnn::set_clip_anchors_to_image(bool value) {
  _internal_set_clip_anchors_to_image(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.clip_anchors_to_image)
}

// optional bool use_matmul_gather_in_matcher = 33 [default = false];
inline bool FasterRcnn::_internal_has_use_matmul_gather_in_matcher() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool FasterRcnn::has_use_matmul_gather_in_matcher() const {
  return _internal_has_use_matmul_gather_in_matcher();
}
inline void FasterRcnn::clear_use_matmul_gather_in_matcher() {
  use_matmul_gather_in_matcher_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool FasterRcnn::_internal_use_matmul_gather_in_matcher() const {
  return use_matmul_gather_in_matcher_;
}
inline bool FasterRcnn::use_matmul_gather_in_matcher() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.use_matmul_gather_in_matcher)
  return _internal_use_matmul_gather_in_matcher();
}
inline void FasterRcnn::_internal_set_use_matmul_gather_in_matcher(bool value) {
  _has_bits_[0] |= 0x00010000u;
  use_matmul_gather_in_matcher_ = value;
}
inline void FasterRcnn::set_use_matmul_gather_in_matcher(bool value) {
  _internal_set_use_matmul_gather_in_matcher(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.use_matmul_gather_in_matcher)
}

// optional bool use_static_balanced_label_sampler = 34 [default = false];
inline bool FasterRcnn::_internal_has_use_static_balanced_label_sampler() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool FasterRcnn::has_use_static_balanced_label_sampler() const {
  return _internal_has_use_static_balanced_label_sampler();
}
inline void FasterRcnn::clear_use_static_balanced_label_sampler() {
  use_static_balanced_label_sampler_ = false;
  _has_bits_[0] &= ~0x00020000u;
}
inline bool FasterRcnn::_internal_use_static_balanced_label_sampler() const {
  return use_static_balanced_label_sampler_;
}
inline bool FasterRcnn::use_static_balanced_label_sampler() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.use_static_balanced_label_sampler)
  return _internal_use_static_balanced_label_sampler();
}
inline void FasterRcnn::_internal_set_use_static_balanced_label_sampler(bool value) {
  _has_bits_[0] |= 0x00020000u;
  use_static_balanced_label_sampler_ = value;
}
inline void FasterRcnn::set_use_static_balanced_label_sampler(bool value) {
  _internal_set_use_static_balanced_label_sampler(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.use_static_balanced_label_sampler)
}

// optional bool use_static_shapes = 35 [default = false];
inline bool FasterRcnn::_internal_has_use_static_shapes() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool FasterRcnn::has_use_static_shapes() const {
  return _internal_has_use_static_shapes();
}
inline void FasterRcnn::clear_use_static_shapes() {
  use_static_shapes_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool FasterRcnn::_internal_use_static_shapes() const {
  return use_static_shapes_;
}
inline bool FasterRcnn::use_static_shapes() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.use_static_shapes)
  return _internal_use_static_shapes();
}
inline void FasterRcnn::_internal_set_use_static_shapes(bool value) {
  _has_bits_[0] |= 0x00040000u;
  use_static_shapes_ = value;
}
inline void FasterRcnn::set_use_static_shapes(bool value) {
  _internal_set_use_static_shapes(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.use_static_shapes)
}

// optional bool resize_masks = 36 [default = true];
inline bool FasterRcnn::_internal_has_resize_masks() const {
  bool value = (_has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline bool FasterRcnn::has_resize_masks() const {
  return _internal_has_resize_masks();
}
inline void FasterRcnn::clear_resize_masks() {
  resize_masks_ = true;
  _has_bits_[1] &= ~0x00000008u;
}
inline bool FasterRcnn::_internal_resize_masks() const {
  return resize_masks_;
}
inline bool FasterRcnn::resize_masks() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.resize_masks)
  return _internal_resize_masks();
}
inline void FasterRcnn::_internal_set_resize_masks(bool value) {
  _has_bits_[1] |= 0x00000008u;
  resize_masks_ = value;
}
inline void FasterRcnn::set_resize_masks(bool value) {
  _internal_set_resize_masks(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.resize_masks)
}

// optional bool use_static_shapes_for_eval = 37 [default = false];
inline bool FasterRcnn::_internal_has_use_static_shapes_for_eval() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool FasterRcnn::has_use_static_shapes_for_eval() const {
  return _internal_has_use_static_shapes_for_eval();
}
inline void FasterRcnn::clear_use_static_shapes_for_eval() {
  use_static_shapes_for_eval_ = false;
  _has_bits_[0] &= ~0x00080000u;
}
inline bool FasterRcnn::_internal_use_static_shapes_for_eval() const {
  return use_static_shapes_for_eval_;
}
inline bool FasterRcnn::use_static_shapes_for_eval() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnn.use_static_shapes_for_eval)
  return _internal_use_static_shapes_for_eval();
}
inline void FasterRcnn::_internal_set_use_static_shapes_for_eval(bool value) {
  _has_bits_[0] |= 0x00080000u;
  use_static_shapes_for_eval_ = value;
}
inline void FasterRcnn::set_use_static_shapes_for_eval(bool value) {
  _internal_set_use_static_shapes_for_eval(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnn.use_static_shapes_for_eval)
}

// -------------------------------------------------------------------

// FasterRcnnFeatureExtractor

// optional string type = 1;
inline bool FasterRcnnFeatureExtractor::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FasterRcnnFeatureExtractor::has_type() const {
  return _internal_has_type();
}
inline void FasterRcnnFeatureExtractor::clear_type() {
  type_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& FasterRcnnFeatureExtractor::type() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnnFeatureExtractor.type)
  return _internal_type();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void FasterRcnnFeatureExtractor::set_type(ArgT0&& arg0, ArgT... args) {
 _has_bits_[0] |= 0x00000001u;
 type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnnFeatureExtractor.type)
}
inline std::string* FasterRcnnFeatureExtractor::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FasterRcnnFeatureExtractor.type)
  return _s;
}
inline const std::string& FasterRcnnFeatureExtractor::_internal_type() const {
  return type_.Get();
}
inline void FasterRcnnFeatureExtractor::_internal_set_type(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* FasterRcnnFeatureExtractor::_internal_mutable_type() {
  _has_bits_[0] |= 0x00000001u;
  return type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* FasterRcnnFeatureExtractor::release_type() {
  // @@protoc_insertion_point(field_release:object_detection.protos.FasterRcnnFeatureExtractor.type)
  if (!_internal_has_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return type_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void FasterRcnnFeatureExtractor::set_allocated_type(std::string* type) {
  if (type != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.FasterRcnnFeatureExtractor.type)
}

// optional int32 first_stage_features_stride = 2 [default = 16];
inline bool FasterRcnnFeatureExtractor::_internal_has_first_stage_features_stride() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool FasterRcnnFeatureExtractor::has_first_stage_features_stride() const {
  return _internal_has_first_stage_features_stride();
}
inline void FasterRcnnFeatureExtractor::clear_first_stage_features_stride() {
  first_stage_features_stride_ = 16;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnnFeatureExtractor::_internal_first_stage_features_stride() const {
  return first_stage_features_stride_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FasterRcnnFeatureExtractor::first_stage_features_stride() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnnFeatureExtractor.first_stage_features_stride)
  return _internal_first_stage_features_stride();
}
inline void FasterRcnnFeatureExtractor::_internal_set_first_stage_features_stride(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  first_stage_features_stride_ = value;
}
inline void FasterRcnnFeatureExtractor::set_first_stage_features_stride(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_first_stage_features_stride(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnnFeatureExtractor.first_stage_features_stride)
}

// optional bool batch_norm_trainable = 3 [default = false];
inline bool FasterRcnnFeatureExtractor::_internal_has_batch_norm_trainable() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool FasterRcnnFeatureExtractor::has_batch_norm_trainable() const {
  return _internal_has_batch_norm_trainable();
}
inline void FasterRcnnFeatureExtractor::clear_batch_norm_trainable() {
  batch_norm_trainable_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool FasterRcnnFeatureExtractor::_internal_batch_norm_trainable() const {
  return batch_norm_trainable_;
}
inline bool FasterRcnnFeatureExtractor::batch_norm_trainable() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FasterRcnnFeatureExtractor.batch_norm_trainable)
  return _internal_batch_norm_trainable();
}
inline void FasterRcnnFeatureExtractor::_internal_set_batch_norm_trainable(bool value) {
  _has_bits_[0] |= 0x00000002u;
  batch_norm_trainable_ = value;
}
inline void FasterRcnnFeatureExtractor::set_batch_norm_trainable(bool value) {
  _internal_set_batch_norm_trainable(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FasterRcnnFeatureExtractor.batch_norm_trainable)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2ffaster_5frcnn_2eproto
