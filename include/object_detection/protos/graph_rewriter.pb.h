// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/graph_rewriter.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fgraph_5frewriter_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fgraph_5frewriter_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_object_5fdetection_2fprotos_2fgraph_5frewriter_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_object_5fdetection_2fprotos_2fgraph_5frewriter_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_5fdetection_2fprotos_2fgraph_5frewriter_2eproto;
namespace object_detection {
namespace protos {
class GraphRewriter;
struct GraphRewriterDefaultTypeInternal;
extern GraphRewriterDefaultTypeInternal _GraphRewriter_default_instance_;
class Quantization;
struct QuantizationDefaultTypeInternal;
extern QuantizationDefaultTypeInternal _Quantization_default_instance_;
}  // namespace protos
}  // namespace object_detection
PROTOBUF_NAMESPACE_OPEN
template<> ::object_detection::protos::GraphRewriter* Arena::CreateMaybeMessage<::object_detection::protos::GraphRewriter>(Arena*);
template<> ::object_detection::protos::Quantization* Arena::CreateMaybeMessage<::object_detection::protos::Quantization>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace object_detection {
namespace protos {

// ===================================================================

class GraphRewriter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.GraphRewriter) */ {
 public:
  inline GraphRewriter() : GraphRewriter(nullptr) {}
  ~GraphRewriter() override;
  explicit constexpr GraphRewriter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GraphRewriter(const GraphRewriter& from);
  GraphRewriter(GraphRewriter&& from) noexcept
    : GraphRewriter() {
    *this = ::std::move(from);
  }

  inline GraphRewriter& operator=(const GraphRewriter& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphRewriter& operator=(GraphRewriter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphRewriter& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphRewriter* internal_default_instance() {
    return reinterpret_cast<const GraphRewriter*>(
               &_GraphRewriter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GraphRewriter& a, GraphRewriter& b) {
    a.Swap(&b);
  }
  inline void Swap(GraphRewriter* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphRewriter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GraphRewriter* New() const final {
    return new GraphRewriter();
  }

  GraphRewriter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GraphRewriter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GraphRewriter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const GraphRewriter& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GraphRewriter* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.GraphRewriter";
  }
  protected:
  explicit GraphRewriter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kQuantizationFieldNumber = 1,
  };
  // optional .object_detection.protos.Quantization quantization = 1;
  bool has_quantization() const;
  private:
  bool _internal_has_quantization() const;
  public:
  void clear_quantization();
  const ::object_detection::protos::Quantization& quantization() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::Quantization* release_quantization();
  ::object_detection::protos::Quantization* mutable_quantization();
  void set_allocated_quantization(::object_detection::protos::Quantization* quantization);
  private:
  const ::object_detection::protos::Quantization& _internal_quantization() const;
  ::object_detection::protos::Quantization* _internal_mutable_quantization();
  public:
  void unsafe_arena_set_allocated_quantization(
      ::object_detection::protos::Quantization* quantization);
  ::object_detection::protos::Quantization* unsafe_arena_release_quantization();


  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline bool HasExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _extensions_.Has(id.number());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void ClearExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) {
    _extensions_.ClearExtension(id.number());

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline int ExtensionSize(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _extensions_.ExtensionSize(id.number());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _proto_TypeTraits::Get(id.number(), _extensions_,
                                  id.default_value());
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::Mutable(id.number(), _field_type,
                                      &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::ConstType value) {
    _proto_TypeTraits::Set(id.number(), _field_type, value, &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::SetAllocated(id.number(), _field_type, value,
                                    &_extensions_);

  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void UnsafeArenaSetAllocatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Singular::MutableType value) {
    _proto_TypeTraits::UnsafeArenaSetAllocated(id.number(), _field_type,
                                               value, &_extensions_);

  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline PROTOBUF_MUST_USE_RESULT
      typename _proto_TypeTraits::Singular::MutableType
      ReleaseExtension(
          const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
              GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::Release(id.number(), _field_type,
                                      &_extensions_);
  }
  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Singular::MutableType
  UnsafeArenaReleaseExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::UnsafeArenaRelease(id.number(), _field_type,
                                                 &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::ConstType GetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index) const {

    return _proto_TypeTraits::Get(id.number(), _extensions_, index);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType MutableExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index) {

    return _proto_TypeTraits::Mutable(id.number(), index, &_extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void SetExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id,
      int index, typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Set(id.number(), index, value, &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::MutableType AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) {
    typename _proto_TypeTraits::Repeated::MutableType to_add =
        _proto_TypeTraits::Add(id.number(), _field_type, &_extensions_);

    return to_add;
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline void AddExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id,
      typename _proto_TypeTraits::Repeated::ConstType value) {
    _proto_TypeTraits::Add(id.number(), _field_type, _is_packed, value,
                           &_extensions_);

  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline const typename _proto_TypeTraits::Repeated::RepeatedFieldType&
  GetRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) const {

    return _proto_TypeTraits::GetRepeated(id.number(), _extensions_);
  }

  template <typename _proto_TypeTraits,
            ::PROTOBUF_NAMESPACE_ID::internal::FieldType _field_type,
            bool _is_packed>
  inline typename _proto_TypeTraits::Repeated::RepeatedFieldType*
  MutableRepeatedExtension(
      const ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier<
          GraphRewriter, _proto_TypeTraits, _field_type, _is_packed>& id) {

    return _proto_TypeTraits::MutableRepeated(id.number(), _field_type,
                                              _is_packed, &_extensions_);
  }

  // @@protoc_insertion_point(class_scope:object_detection.protos.GraphRewriter)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::ExtensionSet _extensions_;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::object_detection::protos::Quantization* quantization_;
  friend struct ::TableStruct_object_5fdetection_2fprotos_2fgraph_5frewriter_2eproto;
};
// -------------------------------------------------------------------

class Quantization final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.Quantization) */ {
 public:
  inline Quantization() : Quantization(nullptr) {}
  ~Quantization() override;
  explicit constexpr Quantization(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Quantization(const Quantization& from);
  Quantization(Quantization&& from) noexcept
    : Quantization() {
    *this = ::std::move(from);
  }

  inline Quantization& operator=(const Quantization& from) {
    CopyFrom(from);
    return *this;
  }
  inline Quantization& operator=(Quantization&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Quantization& default_instance() {
    return *internal_default_instance();
  }
  static inline const Quantization* internal_default_instance() {
    return reinterpret_cast<const Quantization*>(
               &_Quantization_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Quantization& a, Quantization& b) {
    a.Swap(&b);
  }
  inline void Swap(Quantization* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Quantization* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Quantization* New() const final {
    return new Quantization();
  }

  Quantization* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Quantization>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Quantization& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Quantization& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Quantization* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.Quantization";
  }
  protected:
  explicit Quantization(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSymmetricFieldNumber = 4,
    kActivationBitsFieldNumber = 3,
    kDelayFieldNumber = 1,
    kWeightBitsFieldNumber = 2,
  };
  // optional bool symmetric = 4 [default = false];
  bool has_symmetric() const;
  private:
  bool _internal_has_symmetric() const;
  public:
  void clear_symmetric();
  bool symmetric() const;
  void set_symmetric(bool value);
  private:
  bool _internal_symmetric() const;
  void _internal_set_symmetric(bool value);
  public:

  // optional int32 activation_bits = 3 [default = 8];
  bool has_activation_bits() const;
  private:
  bool _internal_has_activation_bits() const;
  public:
  void clear_activation_bits();
  ::PROTOBUF_NAMESPACE_ID::int32 activation_bits() const;
  void set_activation_bits(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_activation_bits() const;
  void _internal_set_activation_bits(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 delay = 1 [default = 500000];
  bool has_delay() const;
  private:
  bool _internal_has_delay() const;
  public:
  void clear_delay();
  ::PROTOBUF_NAMESPACE_ID::int32 delay() const;
  void set_delay(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_delay() const;
  void _internal_set_delay(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 weight_bits = 2 [default = 8];
  bool has_weight_bits() const;
  private:
  bool _internal_has_weight_bits() const;
  public:
  void clear_weight_bits();
  ::PROTOBUF_NAMESPACE_ID::int32 weight_bits() const;
  void set_weight_bits(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_weight_bits() const;
  void _internal_set_weight_bits(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:object_detection.protos.Quantization)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool symmetric_;
  ::PROTOBUF_NAMESPACE_ID::int32 activation_bits_;
  ::PROTOBUF_NAMESPACE_ID::int32 delay_;
  ::PROTOBUF_NAMESPACE_ID::int32 weight_bits_;
  friend struct ::TableStruct_object_5fdetection_2fprotos_2fgraph_5frewriter_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GraphRewriter

// optional .object_detection.protos.Quantization quantization = 1;
inline bool GraphRewriter::_internal_has_quantization() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || quantization_ != nullptr);
  return value;
}
inline bool GraphRewriter::has_quantization() const {
  return _internal_has_quantization();
}
inline void GraphRewriter::clear_quantization() {
  if (quantization_ != nullptr) quantization_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::object_detection::protos::Quantization& GraphRewriter::_internal_quantization() const {
  const ::object_detection::protos::Quantization* p = quantization_;
  return p != nullptr ? *p : reinterpret_cast<const ::object_detection::protos::Quantization&>(
      ::object_detection::protos::_Quantization_default_instance_);
}
inline const ::object_detection::protos::Quantization& GraphRewriter::quantization() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.GraphRewriter.quantization)
  return _internal_quantization();
}
inline void GraphRewriter::unsafe_arena_set_allocated_quantization(
    ::object_detection::protos::Quantization* quantization) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(quantization_);
  }
  quantization_ = quantization;
  if (quantization) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.GraphRewriter.quantization)
}
inline ::object_detection::protos::Quantization* GraphRewriter::release_quantization() {
  _has_bits_[0] &= ~0x00000001u;
  ::object_detection::protos::Quantization* temp = quantization_;
  quantization_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::object_detection::protos::Quantization* GraphRewriter::unsafe_arena_release_quantization() {
  // @@protoc_insertion_point(field_release:object_detection.protos.GraphRewriter.quantization)
  _has_bits_[0] &= ~0x00000001u;
  ::object_detection::protos::Quantization* temp = quantization_;
  quantization_ = nullptr;
  return temp;
}
inline ::object_detection::protos::Quantization* GraphRewriter::_internal_mutable_quantization() {
  _has_bits_[0] |= 0x00000001u;
  if (quantization_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::Quantization>(GetArenaForAllocation());
    quantization_ = p;
  }
  return quantization_;
}
inline ::object_detection::protos::Quantization* GraphRewriter::mutable_quantization() {
  ::object_detection::protos::Quantization* _msg = _internal_mutable_quantization();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.GraphRewriter.quantization)
  return _msg;
}
inline void GraphRewriter::set_allocated_quantization(::object_detection::protos::Quantization* quantization) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete quantization_;
  }
  if (quantization) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::object_detection::protos::Quantization>::GetOwningArena(quantization);
    if (message_arena != submessage_arena) {
      quantization = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, quantization, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  quantization_ = quantization;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.GraphRewriter.quantization)
}

// -------------------------------------------------------------------

// Quantization

// optional int32 delay = 1 [default = 500000];
inline bool Quantization::_internal_has_delay() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Quantization::has_delay() const {
  return _internal_has_delay();
}
inline void Quantization::clear_delay() {
  delay_ = 500000;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Quantization::_internal_delay() const {
  return delay_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Quantization::delay() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.Quantization.delay)
  return _internal_delay();
}
inline void Quantization::_internal_set_delay(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  delay_ = value;
}
inline void Quantization::set_delay(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_delay(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.Quantization.delay)
}

// optional int32 weight_bits = 2 [default = 8];
inline bool Quantization::_internal_has_weight_bits() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool Quantization::has_weight_bits() const {
  return _internal_has_weight_bits();
}
inline void Quantization::clear_weight_bits() {
  weight_bits_ = 8;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Quantization::_internal_weight_bits() const {
  return weight_bits_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Quantization::weight_bits() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.Quantization.weight_bits)
  return _internal_weight_bits();
}
inline void Quantization::_internal_set_weight_bits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  weight_bits_ = value;
}
inline void Quantization::set_weight_bits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_weight_bits(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.Quantization.weight_bits)
}

// optional int32 activation_bits = 3 [default = 8];
inline bool Quantization::_internal_has_activation_bits() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Quantization::has_activation_bits() const {
  return _internal_has_activation_bits();
}
inline void Quantization::clear_activation_bits() {
  activation_bits_ = 8;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Quantization::_internal_activation_bits() const {
  return activation_bits_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Quantization::activation_bits() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.Quantization.activation_bits)
  return _internal_activation_bits();
}
inline void Quantization::_internal_set_activation_bits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  activation_bits_ = value;
}
inline void Quantization::set_activation_bits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_activation_bits(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.Quantization.activation_bits)
}

// optional bool symmetric = 4 [default = false];
inline bool Quantization::_internal_has_symmetric() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Quantization::has_symmetric() const {
  return _internal_has_symmetric();
}
inline void Quantization::clear_symmetric() {
  symmetric_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool Quantization::_internal_symmetric() const {
  return symmetric_;
}
inline bool Quantization::symmetric() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.Quantization.symmetric)
  return _internal_symmetric();
}
inline void Quantization::_internal_set_symmetric(bool value) {
  _has_bits_[0] |= 0x00000001u;
  symmetric_ = value;
}
inline void Quantization::set_symmetric(bool value) {
  _internal_set_symmetric(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.Quantization.symmetric)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fgraph_5frewriter_2eproto
