// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/flexible_grid_anchor_generator.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto;
namespace object_detection {
namespace protos {
class AnchorGrid;
struct AnchorGridDefaultTypeInternal;
extern AnchorGridDefaultTypeInternal _AnchorGrid_default_instance_;
class FlexibleGridAnchorGenerator;
struct FlexibleGridAnchorGeneratorDefaultTypeInternal;
extern FlexibleGridAnchorGeneratorDefaultTypeInternal _FlexibleGridAnchorGenerator_default_instance_;
}  // namespace protos
}  // namespace object_detection
PROTOBUF_NAMESPACE_OPEN
template<> ::object_detection::protos::AnchorGrid* Arena::CreateMaybeMessage<::object_detection::protos::AnchorGrid>(Arena*);
template<> ::object_detection::protos::FlexibleGridAnchorGenerator* Arena::CreateMaybeMessage<::object_detection::protos::FlexibleGridAnchorGenerator>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace object_detection {
namespace protos {

// ===================================================================

class FlexibleGridAnchorGenerator final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.FlexibleGridAnchorGenerator) */ {
 public:
  inline FlexibleGridAnchorGenerator() : FlexibleGridAnchorGenerator(nullptr) {}
  ~FlexibleGridAnchorGenerator() override;
  explicit constexpr FlexibleGridAnchorGenerator(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FlexibleGridAnchorGenerator(const FlexibleGridAnchorGenerator& from);
  FlexibleGridAnchorGenerator(FlexibleGridAnchorGenerator&& from) noexcept
    : FlexibleGridAnchorGenerator() {
    *this = ::std::move(from);
  }

  inline FlexibleGridAnchorGenerator& operator=(const FlexibleGridAnchorGenerator& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlexibleGridAnchorGenerator& operator=(FlexibleGridAnchorGenerator&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlexibleGridAnchorGenerator& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlexibleGridAnchorGenerator* internal_default_instance() {
    return reinterpret_cast<const FlexibleGridAnchorGenerator*>(
               &_FlexibleGridAnchorGenerator_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FlexibleGridAnchorGenerator& a, FlexibleGridAnchorGenerator& b) {
    a.Swap(&b);
  }
  inline void Swap(FlexibleGridAnchorGenerator* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlexibleGridAnchorGenerator* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FlexibleGridAnchorGenerator* New() const final {
    return new FlexibleGridAnchorGenerator();
  }

  FlexibleGridAnchorGenerator* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FlexibleGridAnchorGenerator>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const FlexibleGridAnchorGenerator& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const FlexibleGridAnchorGenerator& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FlexibleGridAnchorGenerator* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.FlexibleGridAnchorGenerator";
  }
  protected:
  explicit FlexibleGridAnchorGenerator(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAnchorGridFieldNumber = 1,
    kNormalizeCoordinatesFieldNumber = 2,
  };
  // repeated .object_detection.protos.AnchorGrid anchor_grid = 1;
  int anchor_grid_size() const;
  private:
  int _internal_anchor_grid_size() const;
  public:
  void clear_anchor_grid();
  ::object_detection::protos::AnchorGrid* mutable_anchor_grid(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::object_detection::protos::AnchorGrid >*
      mutable_anchor_grid();
  private:
  const ::object_detection::protos::AnchorGrid& _internal_anchor_grid(int index) const;
  ::object_detection::protos::AnchorGrid* _internal_add_anchor_grid();
  public:
  const ::object_detection::protos::AnchorGrid& anchor_grid(int index) const;
  ::object_detection::protos::AnchorGrid* add_anchor_grid();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::object_detection::protos::AnchorGrid >&
      anchor_grid() const;

  // optional bool normalize_coordinates = 2 [default = true];
  bool has_normalize_coordinates() const;
  private:
  bool _internal_has_normalize_coordinates() const;
  public:
  void clear_normalize_coordinates();
  bool normalize_coordinates() const;
  void set_normalize_coordinates(bool value);
  private:
  bool _internal_normalize_coordinates() const;
  void _internal_set_normalize_coordinates(bool value);
  public:

  // @@protoc_insertion_point(class_scope:object_detection.protos.FlexibleGridAnchorGenerator)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::object_detection::protos::AnchorGrid > anchor_grid_;
  bool normalize_coordinates_;
  friend struct ::TableStruct_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto;
};
// -------------------------------------------------------------------

class AnchorGrid final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.AnchorGrid) */ {
 public:
  inline AnchorGrid() : AnchorGrid(nullptr) {}
  ~AnchorGrid() override;
  explicit constexpr AnchorGrid(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  AnchorGrid(const AnchorGrid& from);
  AnchorGrid(AnchorGrid&& from) noexcept
    : AnchorGrid() {
    *this = ::std::move(from);
  }

  inline AnchorGrid& operator=(const AnchorGrid& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnchorGrid& operator=(AnchorGrid&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AnchorGrid& default_instance() {
    return *internal_default_instance();
  }
  static inline const AnchorGrid* internal_default_instance() {
    return reinterpret_cast<const AnchorGrid*>(
               &_AnchorGrid_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AnchorGrid& a, AnchorGrid& b) {
    a.Swap(&b);
  }
  inline void Swap(AnchorGrid* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnchorGrid* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AnchorGrid* New() const final {
    return new AnchorGrid();
  }

  AnchorGrid* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AnchorGrid>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const AnchorGrid& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const AnchorGrid& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AnchorGrid* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.AnchorGrid";
  }
  protected:
  explicit AnchorGrid(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBaseSizesFieldNumber = 1,
    kAspectRatiosFieldNumber = 2,
    kHeightStrideFieldNumber = 3,
    kWidthStrideFieldNumber = 4,
    kHeightOffsetFieldNumber = 5,
    kWidthOffsetFieldNumber = 6,
  };
  // repeated float base_sizes = 1;
  int base_sizes_size() const;
  private:
  int _internal_base_sizes_size() const;
  public:
  void clear_base_sizes();
  private:
  float _internal_base_sizes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_base_sizes() const;
  void _internal_add_base_sizes(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_base_sizes();
  public:
  float base_sizes(int index) const;
  void set_base_sizes(int index, float value);
  void add_base_sizes(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      base_sizes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_base_sizes();

  // repeated float aspect_ratios = 2;
  int aspect_ratios_size() const;
  private:
  int _internal_aspect_ratios_size() const;
  public:
  void clear_aspect_ratios();
  private:
  float _internal_aspect_ratios(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_aspect_ratios() const;
  void _internal_add_aspect_ratios(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_aspect_ratios();
  public:
  float aspect_ratios(int index) const;
  void set_aspect_ratios(int index, float value);
  void add_aspect_ratios(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      aspect_ratios() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_aspect_ratios();

  // optional uint32 height_stride = 3;
  bool has_height_stride() const;
  private:
  bool _internal_has_height_stride() const;
  public:
  void clear_height_stride();
  ::PROTOBUF_NAMESPACE_ID::uint32 height_stride() const;
  void set_height_stride(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height_stride() const;
  void _internal_set_height_stride(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 width_stride = 4;
  bool has_width_stride() const;
  private:
  bool _internal_has_width_stride() const;
  public:
  void clear_width_stride();
  ::PROTOBUF_NAMESPACE_ID::uint32 width_stride() const;
  void set_width_stride(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_width_stride() const;
  void _internal_set_width_stride(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 height_offset = 5 [default = 0];
  bool has_height_offset() const;
  private:
  bool _internal_has_height_offset() const;
  public:
  void clear_height_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 height_offset() const;
  void set_height_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height_offset() const;
  void _internal_set_height_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 width_offset = 6 [default = 0];
  bool has_width_offset() const;
  private:
  bool _internal_has_width_offset() const;
  public:
  void clear_width_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 width_offset() const;
  void set_width_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_width_offset() const;
  void _internal_set_width_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:object_detection.protos.AnchorGrid)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > base_sizes_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > aspect_ratios_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_stride_;
  ::PROTOBUF_NAMESPACE_ID::uint32 width_stride_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 width_offset_;
  friend struct ::TableStruct_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FlexibleGridAnchorGenerator

// repeated .object_detection.protos.AnchorGrid anchor_grid = 1;
inline int FlexibleGridAnchorGenerator::_internal_anchor_grid_size() const {
  return anchor_grid_.size();
}
inline int FlexibleGridAnchorGenerator::anchor_grid_size() const {
  return _internal_anchor_grid_size();
}
inline void FlexibleGridAnchorGenerator::clear_anchor_grid() {
  anchor_grid_.Clear();
}
inline ::object_detection::protos::AnchorGrid* FlexibleGridAnchorGenerator::mutable_anchor_grid(int index) {
  // @@protoc_insertion_point(field_mutable:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return anchor_grid_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::object_detection::protos::AnchorGrid >*
FlexibleGridAnchorGenerator::mutable_anchor_grid() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return &anchor_grid_;
}
inline const ::object_detection::protos::AnchorGrid& FlexibleGridAnchorGenerator::_internal_anchor_grid(int index) const {
  return anchor_grid_.Get(index);
}
inline const ::object_detection::protos::AnchorGrid& FlexibleGridAnchorGenerator::anchor_grid(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return _internal_anchor_grid(index);
}
inline ::object_detection::protos::AnchorGrid* FlexibleGridAnchorGenerator::_internal_add_anchor_grid() {
  return anchor_grid_.Add();
}
inline ::object_detection::protos::AnchorGrid* FlexibleGridAnchorGenerator::add_anchor_grid() {
  ::object_detection::protos::AnchorGrid* _add = _internal_add_anchor_grid();
  // @@protoc_insertion_point(field_add:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::object_detection::protos::AnchorGrid >&
FlexibleGridAnchorGenerator::anchor_grid() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.FlexibleGridAnchorGenerator.anchor_grid)
  return anchor_grid_;
}

// optional bool normalize_coordinates = 2 [default = true];
inline bool FlexibleGridAnchorGenerator::_internal_has_normalize_coordinates() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FlexibleGridAnchorGenerator::has_normalize_coordinates() const {
  return _internal_has_normalize_coordinates();
}
inline void FlexibleGridAnchorGenerator::clear_normalize_coordinates() {
  normalize_coordinates_ = true;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool FlexibleGridAnchorGenerator::_internal_normalize_coordinates() const {
  return normalize_coordinates_;
}
inline bool FlexibleGridAnchorGenerator::normalize_coordinates() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.FlexibleGridAnchorGenerator.normalize_coordinates)
  return _internal_normalize_coordinates();
}
inline void FlexibleGridAnchorGenerator::_internal_set_normalize_coordinates(bool value) {
  _has_bits_[0] |= 0x00000001u;
  normalize_coordinates_ = value;
}
inline void FlexibleGridAnchorGenerator::set_normalize_coordinates(bool value) {
  _internal_set_normalize_coordinates(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.FlexibleGridAnchorGenerator.normalize_coordinates)
}

// -------------------------------------------------------------------

// AnchorGrid

// repeated float base_sizes = 1;
inline int AnchorGrid::_internal_base_sizes_size() const {
  return base_sizes_.size();
}
inline int AnchorGrid::base_sizes_size() const {
  return _internal_base_sizes_size();
}
inline void AnchorGrid::clear_base_sizes() {
  base_sizes_.Clear();
}
inline float AnchorGrid::_internal_base_sizes(int index) const {
  return base_sizes_.Get(index);
}
inline float AnchorGrid::base_sizes(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.base_sizes)
  return _internal_base_sizes(index);
}
inline void AnchorGrid::set_base_sizes(int index, float value) {
  base_sizes_.Set(index, value);
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.base_sizes)
}
inline void AnchorGrid::_internal_add_base_sizes(float value) {
  base_sizes_.Add(value);
}
inline void AnchorGrid::add_base_sizes(float value) {
  _internal_add_base_sizes(value);
  // @@protoc_insertion_point(field_add:object_detection.protos.AnchorGrid.base_sizes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AnchorGrid::_internal_base_sizes() const {
  return base_sizes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AnchorGrid::base_sizes() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.AnchorGrid.base_sizes)
  return _internal_base_sizes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AnchorGrid::_internal_mutable_base_sizes() {
  return &base_sizes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AnchorGrid::mutable_base_sizes() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.AnchorGrid.base_sizes)
  return _internal_mutable_base_sizes();
}

// repeated float aspect_ratios = 2;
inline int AnchorGrid::_internal_aspect_ratios_size() const {
  return aspect_ratios_.size();
}
inline int AnchorGrid::aspect_ratios_size() const {
  return _internal_aspect_ratios_size();
}
inline void AnchorGrid::clear_aspect_ratios() {
  aspect_ratios_.Clear();
}
inline float AnchorGrid::_internal_aspect_ratios(int index) const {
  return aspect_ratios_.Get(index);
}
inline float AnchorGrid::aspect_ratios(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.aspect_ratios)
  return _internal_aspect_ratios(index);
}
inline void AnchorGrid::set_aspect_ratios(int index, float value) {
  aspect_ratios_.Set(index, value);
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.aspect_ratios)
}
inline void AnchorGrid::_internal_add_aspect_ratios(float value) {
  aspect_ratios_.Add(value);
}
inline void AnchorGrid::add_aspect_ratios(float value) {
  _internal_add_aspect_ratios(value);
  // @@protoc_insertion_point(field_add:object_detection.protos.AnchorGrid.aspect_ratios)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AnchorGrid::_internal_aspect_ratios() const {
  return aspect_ratios_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
AnchorGrid::aspect_ratios() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.AnchorGrid.aspect_ratios)
  return _internal_aspect_ratios();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AnchorGrid::_internal_mutable_aspect_ratios() {
  return &aspect_ratios_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
AnchorGrid::mutable_aspect_ratios() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.AnchorGrid.aspect_ratios)
  return _internal_mutable_aspect_ratios();
}

// optional uint32 height_stride = 3;
inline bool AnchorGrid::_internal_has_height_stride() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AnchorGrid::has_height_stride() const {
  return _internal_has_height_stride();
}
inline void AnchorGrid::clear_height_stride() {
  height_stride_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnchorGrid::_internal_height_stride() const {
  return height_stride_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnchorGrid::height_stride() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.height_stride)
  return _internal_height_stride();
}
inline void AnchorGrid::_internal_set_height_stride(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  height_stride_ = value;
}
inline void AnchorGrid::set_height_stride(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height_stride(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.height_stride)
}

// optional uint32 width_stride = 4;
inline bool AnchorGrid::_internal_has_width_stride() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AnchorGrid::has_width_stride() const {
  return _internal_has_width_stride();
}
inline void AnchorGrid::clear_width_stride() {
  width_stride_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnchorGrid::_internal_width_stride() const {
  return width_stride_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnchorGrid::width_stride() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.width_stride)
  return _internal_width_stride();
}
inline void AnchorGrid::_internal_set_width_stride(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  width_stride_ = value;
}
inline void AnchorGrid::set_width_stride(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_width_stride(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.width_stride)
}

// optional uint32 height_offset = 5 [default = 0];
inline bool AnchorGrid::_internal_has_height_offset() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AnchorGrid::has_height_offset() const {
  return _internal_has_height_offset();
}
inline void AnchorGrid::clear_height_offset() {
  height_offset_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnchorGrid::_internal_height_offset() const {
  return height_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnchorGrid::height_offset() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.height_offset)
  return _internal_height_offset();
}
inline void AnchorGrid::_internal_set_height_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  height_offset_ = value;
}
inline void AnchorGrid::set_height_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height_offset(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.height_offset)
}

// optional uint32 width_offset = 6 [default = 0];
inline bool AnchorGrid::_internal_has_width_offset() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool AnchorGrid::has_width_offset() const {
  return _internal_has_width_offset();
}
inline void AnchorGrid::clear_width_offset() {
  width_offset_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnchorGrid::_internal_width_offset() const {
  return width_offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AnchorGrid::width_offset() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.AnchorGrid.width_offset)
  return _internal_width_offset();
}
inline void AnchorGrid::_internal_set_width_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  width_offset_ = value;
}
inline void AnchorGrid::set_width_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_width_offset(value);
  // @@protoc_insertion_point(field_set:object_detection.protos.AnchorGrid.width_offset)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fflexible_5fgrid_5fanchor_5fgenerator_2eproto
