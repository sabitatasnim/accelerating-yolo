// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fmodel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fmodel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/faster_rcnn.pb.h"
#include "object_detection/protos/ssd.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_object_5fdetection_2fprotos_2fmodel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_object_5fdetection_2fprotos_2fmodel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_5fdetection_2fprotos_2fmodel_2eproto;
namespace object_detection {
namespace protos {
class DetectionModel;
struct DetectionModelDefaultTypeInternal;
extern DetectionModelDefaultTypeInternal _DetectionModel_default_instance_;
}  // namespace protos
}  // namespace object_detection
PROTOBUF_NAMESPACE_OPEN
template<> ::object_detection::protos::DetectionModel* Arena::CreateMaybeMessage<::object_detection::protos::DetectionModel>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace object_detection {
namespace protos {

// ===================================================================

class DetectionModel final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.DetectionModel) */ {
 public:
  inline DetectionModel() : DetectionModel(nullptr) {}
  ~DetectionModel() override;
  explicit constexpr DetectionModel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DetectionModel(const DetectionModel& from);
  DetectionModel(DetectionModel&& from) noexcept
    : DetectionModel() {
    *this = ::std::move(from);
  }

  inline DetectionModel& operator=(const DetectionModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline DetectionModel& operator=(DetectionModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DetectionModel& default_instance() {
    return *internal_default_instance();
  }
  enum ModelCase {
    kFasterRcnn = 1,
    kSsd = 2,
    MODEL_NOT_SET = 0,
  };

  static inline const DetectionModel* internal_default_instance() {
    return reinterpret_cast<const DetectionModel*>(
               &_DetectionModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DetectionModel& a, DetectionModel& b) {
    a.Swap(&b);
  }
  inline void Swap(DetectionModel* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DetectionModel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DetectionModel* New() const final {
    return new DetectionModel();
  }

  DetectionModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DetectionModel>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DetectionModel& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DetectionModel& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetectionModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.DetectionModel";
  }
  protected:
  explicit DetectionModel(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFasterRcnnFieldNumber = 1,
    kSsdFieldNumber = 2,
  };
  // .object_detection.protos.FasterRcnn faster_rcnn = 1;
  bool has_faster_rcnn() const;
  private:
  bool _internal_has_faster_rcnn() const;
  public:
  void clear_faster_rcnn();
  const ::object_detection::protos::FasterRcnn& faster_rcnn() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::FasterRcnn* release_faster_rcnn();
  ::object_detection::protos::FasterRcnn* mutable_faster_rcnn();
  void set_allocated_faster_rcnn(::object_detection::protos::FasterRcnn* faster_rcnn);
  private:
  const ::object_detection::protos::FasterRcnn& _internal_faster_rcnn() const;
  ::object_detection::protos::FasterRcnn* _internal_mutable_faster_rcnn();
  public:
  void unsafe_arena_set_allocated_faster_rcnn(
      ::object_detection::protos::FasterRcnn* faster_rcnn);
  ::object_detection::protos::FasterRcnn* unsafe_arena_release_faster_rcnn();

  // .object_detection.protos.Ssd ssd = 2;
  bool has_ssd() const;
  private:
  bool _internal_has_ssd() const;
  public:
  void clear_ssd();
  const ::object_detection::protos::Ssd& ssd() const;
  PROTOBUF_MUST_USE_RESULT ::object_detection::protos::Ssd* release_ssd();
  ::object_detection::protos::Ssd* mutable_ssd();
  void set_allocated_ssd(::object_detection::protos::Ssd* ssd);
  private:
  const ::object_detection::protos::Ssd& _internal_ssd() const;
  ::object_detection::protos::Ssd* _internal_mutable_ssd();
  public:
  void unsafe_arena_set_allocated_ssd(
      ::object_detection::protos::Ssd* ssd);
  ::object_detection::protos::Ssd* unsafe_arena_release_ssd();

  void clear_model();
  ModelCase model_case() const;
  // @@protoc_insertion_point(class_scope:object_detection.protos.DetectionModel)
 private:
  class _Internal;
  void set_has_faster_rcnn();
  void set_has_ssd();

  inline bool has_model() const;
  inline void clear_has_model();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union ModelUnion {
    constexpr ModelUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::object_detection::protos::FasterRcnn* faster_rcnn_;
    ::object_detection::protos::Ssd* ssd_;
  } model_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_object_5fdetection_2fprotos_2fmodel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DetectionModel

// .object_detection.protos.FasterRcnn faster_rcnn = 1;
inline bool DetectionModel::_internal_has_faster_rcnn() const {
  return model_case() == kFasterRcnn;
}
inline bool DetectionModel::has_faster_rcnn() const {
  return _internal_has_faster_rcnn();
}
inline void DetectionModel::set_has_faster_rcnn() {
  _oneof_case_[0] = kFasterRcnn;
}
inline ::object_detection::protos::FasterRcnn* DetectionModel::release_faster_rcnn() {
  // @@protoc_insertion_point(field_release:object_detection.protos.DetectionModel.faster_rcnn)
  if (_internal_has_faster_rcnn()) {
    clear_has_model();
      ::object_detection::protos::FasterRcnn* temp = model_.faster_rcnn_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    model_.faster_rcnn_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::object_detection::protos::FasterRcnn& DetectionModel::_internal_faster_rcnn() const {
  return _internal_has_faster_rcnn()
      ? *model_.faster_rcnn_
      : reinterpret_cast< ::object_detection::protos::FasterRcnn&>(::object_detection::protos::_FasterRcnn_default_instance_);
}
inline const ::object_detection::protos::FasterRcnn& DetectionModel::faster_rcnn() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.DetectionModel.faster_rcnn)
  return _internal_faster_rcnn();
}
inline ::object_detection::protos::FasterRcnn* DetectionModel::unsafe_arena_release_faster_rcnn() {
  // @@protoc_insertion_point(field_unsafe_arena_release:object_detection.protos.DetectionModel.faster_rcnn)
  if (_internal_has_faster_rcnn()) {
    clear_has_model();
    ::object_detection::protos::FasterRcnn* temp = model_.faster_rcnn_;
    model_.faster_rcnn_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void DetectionModel::unsafe_arena_set_allocated_faster_rcnn(::object_detection::protos::FasterRcnn* faster_rcnn) {
  clear_model();
  if (faster_rcnn) {
    set_has_faster_rcnn();
    model_.faster_rcnn_ = faster_rcnn;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.DetectionModel.faster_rcnn)
}
inline ::object_detection::protos::FasterRcnn* DetectionModel::_internal_mutable_faster_rcnn() {
  if (!_internal_has_faster_rcnn()) {
    clear_model();
    set_has_faster_rcnn();
    model_.faster_rcnn_ = CreateMaybeMessage< ::object_detection::protos::FasterRcnn >(GetArenaForAllocation());
  }
  return model_.faster_rcnn_;
}
inline ::object_detection::protos::FasterRcnn* DetectionModel::mutable_faster_rcnn() {
  ::object_detection::protos::FasterRcnn* _msg = _internal_mutable_faster_rcnn();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.DetectionModel.faster_rcnn)
  return _msg;
}

// .object_detection.protos.Ssd ssd = 2;
inline bool DetectionModel::_internal_has_ssd() const {
  return model_case() == kSsd;
}
inline bool DetectionModel::has_ssd() const {
  return _internal_has_ssd();
}
inline void DetectionModel::set_has_ssd() {
  _oneof_case_[0] = kSsd;
}
inline ::object_detection::protos::Ssd* DetectionModel::release_ssd() {
  // @@protoc_insertion_point(field_release:object_detection.protos.DetectionModel.ssd)
  if (_internal_has_ssd()) {
    clear_has_model();
      ::object_detection::protos::Ssd* temp = model_.ssd_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    model_.ssd_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::object_detection::protos::Ssd& DetectionModel::_internal_ssd() const {
  return _internal_has_ssd()
      ? *model_.ssd_
      : reinterpret_cast< ::object_detection::protos::Ssd&>(::object_detection::protos::_Ssd_default_instance_);
}
inline const ::object_detection::protos::Ssd& DetectionModel::ssd() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.DetectionModel.ssd)
  return _internal_ssd();
}
inline ::object_detection::protos::Ssd* DetectionModel::unsafe_arena_release_ssd() {
  // @@protoc_insertion_point(field_unsafe_arena_release:object_detection.protos.DetectionModel.ssd)
  if (_internal_has_ssd()) {
    clear_has_model();
    ::object_detection::protos::Ssd* temp = model_.ssd_;
    model_.ssd_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void DetectionModel::unsafe_arena_set_allocated_ssd(::object_detection::protos::Ssd* ssd) {
  clear_model();
  if (ssd) {
    set_has_ssd();
    model_.ssd_ = ssd;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:object_detection.protos.DetectionModel.ssd)
}
inline ::object_detection::protos::Ssd* DetectionModel::_internal_mutable_ssd() {
  if (!_internal_has_ssd()) {
    clear_model();
    set_has_ssd();
    model_.ssd_ = CreateMaybeMessage< ::object_detection::protos::Ssd >(GetArenaForAllocation());
  }
  return model_.ssd_;
}
inline ::object_detection::protos::Ssd* DetectionModel::mutable_ssd() {
  ::object_detection::protos::Ssd* _msg = _internal_mutable_ssd();
  // @@protoc_insertion_point(field_mutable:object_detection.protos.DetectionModel.ssd)
  return _msg;
}

inline bool DetectionModel::has_model() const {
  return model_case() != MODEL_NOT_SET;
}
inline void DetectionModel::clear_has_model() {
  _oneof_case_[0] = MODEL_NOT_SET;
}
inline DetectionModel::ModelCase DetectionModel::model_case() const {
  return DetectionModel::ModelCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fmodel_2eproto
